<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PayMedia.ApplicationServices.AgreementManagement.ServiceContracts</name>
    </assembly>
    <members>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementDetailAdjustmentSubType">
            <summary>
            Enumerates the ways that a price adjustment for an agreement detail (product) can be calculated:
            <ul>
            <li>Percent off</li>
            <li>Amount off</li>
            <li>Fixed price</li>
            </ul>
            See enumerators for details.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementDetailAdjustmentSubType.PercentOff">
            <summary>
            A percentage of the list price. For example, if you pass in a value of 5 and the ledger account is a <i>credit</i> ledger account, ICC takes 5% off the list price.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementDetailAdjustmentSubType.AmountOff">
            <summary>
            A fixed amount. For example, if you pass in a value of 5 and the ledger account is a <i>debit</i>ledger account, ICC adds 5 to the list price.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementDetailAdjustmentSubType.FixedPrice">
            <summary>
            A fixed price. For example, if you pass in 5 and the ledger account is a <i>credit</i> ledger account, the price is -5.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementDetailAdjustmentTypes">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementDetailAdjustmentTypes.PriceAdjustment">
            <summary>
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementDetailChargeTypes">
            <summary>
            Enumerates the types of charges applicable to products. 
            </summary>  
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementDetailChargeTypes.Recurring">
            <summary>
            A charge that is incurred monthly, quarterly, semi-annually, or annually.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementDetailChargeTypes.OnceOff">
            <summary>
            A charge for a billable event that a customer incurs sporadically or only once. Also known as an event-based charge.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementDetailChargeTypes.Both">
            <summary>
            Applicable to both once-off and recurring charges.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementManagementConfigurationServiceDecorator">
            <summary>
            This class is used for customizing the AgreementManagementConfigurationServiceService.
            To customize create a class that derives from this class and add its type name
            to the serviceOverrideSection of the web.config.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementManagementServiceDecorator">
            <summary>
            This class is used for customizing the AgreementManagementServiceService.
            To customize create a class that derives from this class and add its type name
            to the serviceOverrideSection of the web.config.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementOrProduct">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementOrProduct.Agreement">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementOrProduct.Product">
            <summary>
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementOverrideTypes">
            <summary>
            Enumerates the ways that a price adjustment for an agreement detail (product) can be calculated:
            <ul>
            <li>Percent off</li>
            <li>Amount off</li>
            <li>Fixed price</li>
            </ul>
            See enumerators for details.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementOverrideTypes.PercentOff">
            <summary>
            A percentage of the list price. For example, if you pass in a value of 5 and the ledger account is a <i>credit</i> ledger account, ICC takes 5% off the list price.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementOverrideTypes.AmountOff">
            <summary>
            A fixed amount. For example, if you pass in a value of 5 and the ledger account is a <i>debit</i>ledger account, ICC adds 5 to the list price.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementOverrideTypes.FixedPrice">
            <summary>
            A fixed price. For example, if you pass in 5 and the ledger account is a <i>credit</i> ledger account, the price is -5.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementSequenceEventTypes">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementSequenceEventTypes.ShippingOrders">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementSequenceEventTypes.Unspecified">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementSequenceEventTypes.WorkOrders">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementSequenceEventTypes.Products">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementSequenceEventTypes.AgreementSequence">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementSequenceEventTypes.Agreement">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.AgreementSequenceEventTypes.PrepaymentQuote">
            <summary>
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CaptureTypes">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CaptureTypes.Agreement">
            <summary>
            initial=1, see <i>AgreementLimitation</i> class for more information.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CaptureTypes.FinancialAccount">
            <summary>
            initial=0, see <i>FinancialAccountLimitation</i> class for more information.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CaReDiscDateTypes">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CaReDiscDateTypes.ConfiguredDateFormula">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CaReDiscDateTypes.ContractEndDate">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CaReDiscDateTypes.FixedFutureDate">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CaReDiscDateTypes.Now">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CaReDiscDateTypes.ProductStartDate">
            <summary>
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ChargePeriods">
            <summary>
            Period for which the invoice run should generate the recurring charge for a customer's product. Valid values are <i>None (0), Monthly (1)</i>, <i>Quarterly (3)</i>, <i>HalfYearly (6)</i>, and <i>Yearly (12)</i> and <i>ShortTermSubscription</i>.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ChargePeriods.None">
            <summary>
            Value = 0
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ChargePeriods.Monthly">
            <summary>
            Value = 1
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ChargePeriods.Quarterly">
            <summary>
            Value = 3
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ChargePeriods.HalfYearly">
            <summary>
            Value = 6
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ChargePeriods.Yearly">
            <summary>
            Value = 12
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ChargePeriods.ShortTermSubscription">
            <summary>
            Product is billed for a number of days.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CommissionOptionTypes">
            <summary>
            Enumerators define whether or no a change to a product is commissionable.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CommissionOptionTypes.NoCommission">
            <summary>
            Change is not commissionable.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CommissionOptionTypes.Commission">
            <summary>
            Change is commissionable.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice">
            <summary>
            An <i>addressable device </i>is a serialised device that receives messages from a provisioning system regarding services that the customer is authorised to receive. When you configure a hardware technical product in ICC, you must specify whether it is addressable and also whether it is serialised. Some serialised devices provide multiple ports to support multiple addresses.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.AgreementDetailId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.CommercialProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.CommercialProductName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.CustomerId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.DeviceAgreementDetailId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.DeviceExternalId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.DeviceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.DeviceLinkDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.DeviceLocationComment">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.DeviceSerialNumber">
            <summary>
            The serial number of the smart card or other addressable device. Since device serial numbers are unique in ICC, the serial number can be used to uniquely identify other associated entities, such as customer, commercial product, technical product, agreement, work order, and financial account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.DeviceStatusId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.EventSettingId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.FinancialAccountId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.IsCurrent">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.IsSoftware">
            <summary>
            If this value is true, the agreement detail Id was found via an SPAD. If it is false, the Agreement Detail was found via a DPAD.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.PreferredModelId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.SandBoxId">
            <summary>
            If this value is above zero, this object is a temporary object in a sandbox.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.TechnicalProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.TechnicalProductName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.ValidAddressId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AddressableDevice.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement">
            <summary>
            An <i>agreement</i> represents a contract between your company and a customer. ICC stores general contract information such as start and end dates, charge period, and contract number, type, and status for all contracts. <br>ICC stores additional information for some contracts. For example, for multi-dwelling unit contracts, ICC stores the number of units.</br> When a user creates, edits, or upgrades or downgrades products associated with an agreement, ICC automatically performs these steps: <ol> <li>Generates any required work and shipping orders based on the technical products' configuration.</li> <li>Determines what agreement sequence, if any, should be applied. </li> <li>Sets the initial status of the agreement's entities (shipping orders, work orders, products, and the agreement itself) as required by status per event and reason (SPEAR) configuration for the corresponding entity creation events. Typically, the initial status of all entities is a pending status.</li> </ol>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.AccountManagerId">
            <summary>
            ID of the ICC user responsible for managing this agreement, if applicable.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.AgreementAddressId">
            <summary>
            ID of the address to use for agreement-related correspondence, if different from the default address.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.AreTermsConditionsAccepted">
            <summary>
            If True, the customer has agreed to user-configured terms displayed in the Order Confirmation page. Applicable only to agreements configured to use the Order Confirmation page.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.ChargePeriod">
            <summary>
            Default frequency for generating recurring charges for products on the agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.ContractEndDate">
            <summary>
            Date when the agreement expires. If this agreement type has a configured end date formula, the result of that formula is the contract end date. Otherwise, ICC calculates this date by adding the contract period to the contract start date.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.ContractNumber">
            <summary>
            Identifying number on the printed contract, if applicable.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.ContractPeriodId">
            <summary>
            Number of months for which this agreement is valid, and default number of months for products on the agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.ContractStartDate">
            <summary>
            Date when the agreement becomes effective, and default date when products captured on the same day as the agreement become effective.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.CustomerId">
            <summary>
            ID of the customer associated with this agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.DistributorId">
            <summary>
            ID of the <see cref="!:PayMedia.ApplicationServices.Distributors.ServiceContracts.DataContracts.Distributor"/> that owns the equipment and provides services to the customer, if applicable. In the UI, the label name is "Operator."
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.FinancialAccountId">
            <summary>
            ID of the financial account to which this agreement is linked.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.Id">
            <summary>
            Unique identifier.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.InternetPassword">
            <summary>
            The customer's password (used together with InternetUserId).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.InternetUserId">
            <summary>
            Client-defined field, sometimes used to store the customer's login name, such as for a custom-built Customer SelfCare Internet web site.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.IsDefault">
            <summary>
            If True, identifies the agreement as the customer's default agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.LinkToContract">
            <summary>
            Used with Document Storage functionality. The location of a copy of the contract.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.MarketSegmentId">
            <summary>
            User-configured market segment ID in which the products and services will be used. Used for sales and marketing purposes.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.Name">
            <summary>
            A name (nickname) for the contract. Typically, the user enters this field based on customer request or operational procedures.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.NumberOfUnits">
            <summary>
            Physical number of units of the selected Measurement Units. Each agreement can specify two measurement units, so that you can capture products that require two different measurement units.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.NumberOfUnits2">
            <summary>
            Second NumberOfUnits value.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.PurchaseOrderNumber">
            <summary>
            Customer's purchase order number. Typically, this value is entered by the user.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.SalesPersonId">
            <summary>
            ID of the sales person associated with the selected stock handler (dealer), if any.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.SandboxId">
            <summary>
            If this value is above zero, this object is a temporary object in a <see cref="T:PayMedia.ApplicationServices.SandBoxManager.ServiceContracts.DataContracts.Sandbox"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.SandboxSkipValidation">
            <summary>
            ring the finalisation of the sandbox, ICC checks the business rules for all objects. If any object fails this check, the sandbox will fail. If this value is set to True, ICC skips much of the business rule validation for this object.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.ServiceAddressId">
            <summary>
            ID of the address at which the services on this agreement are provided, if different from the customer's default address.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.Status">
            <summary>
            ID of the user-configured status of this agreement (for example, <i>Active</i>, <i>Pending</i>, <i>Wait for payment</i>).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.StockhandlerId">
            <summary>
            Stock handler (typically a dealer) responsible for this agreement, if applicable.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.TotalMeasurementUnitsAgreem1">
            <summary>
            Sum of the number of units of measurement type 1 across all active agreements of the same agreement type.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.TotalMeasurementUnitsAgreem2">
            <summary>
            Sum of the number of units of measurement type 2 across all active agreements of the same agreement type.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.Type">
            <summary>
            ID of the user-configured <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.UnitOfMeasurementId">
            <summary>
            Configured measurement unit, if applicable to this agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.UnitOfMeasurementId2">
            <summary>
            Second measurement unit, if applicable.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementCancelInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementCancelInfo.AgreementId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementCancelInfo.ContractDurationEndDate">
            <summary>
            The end date of the product with the longest duration.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementCancelInfo.ContractDurationStartDate">
            <summary>
            The start date of the product with the longest duration.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementCancelInfo.LongestRemainContractDuration">
            <summary>
            This is the value in days of the longest duration till the contract end date of any of the products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementCancelInfo.TotalFullCancelationCost">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementCancelInfo.TotalProratedCancelationCost">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementCancelInfo.ProductCancelInfos">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementCancelInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail">
            <summary>
            An <i>agreement detail </i>is a unique instance of a commercial product linked to a customer. When a customer purchases a commercial product, an instance of the commercial product--the agreement detail--is linked to one of the customer's agreements.
            <br>The agreement detail's ID is an important property to find information about the customer and his software and hardware products (technical products and devices). </br>
            <br>For more information about agreement details, see the following classes:
            </br>
            <ul>
            <li>DevicePerAgreementDetail</li>
            <li>SoftwarePerAgreementDetail</li>
            <li>Device</li>
            <li>TechnicalProduct</li>
            <li>CommercialProduct</li>
            </ul>
            For a comparison of returned properties, see the following classes:
            <ul>
            <li>AgreementDetailEx </li>
            <li>AgreementDetailWithOfferDefinitions</li>
            <li>AgreementDetailWithPricing</li>
            </ul>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ActivationDate">
            <summary>
            The date the product became active. It remains populated even if the product is canceled.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.AddressId">
            <summary>
            ID of the Address object where the product is located.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.AgreementId">
            <summary>
            ID of the product's Agreement. An AgreementDetail must be linked to only one Agreement object.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.BusinessUnitId">
            <summary>
            ID of the business unit associated with the sale of this product. Used for reporting and revenue distribution.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.CancellationDate">
            <summary>
            If the product is active, this field is null. If the product is not active, this field holds the date that the product was last canceled. If the product is scheduled to be canceled, this field holds the date on which the product will be canceled.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ChargePeriod">
            <summary>
            The number of months for which the invoice run should generate a recurring charge for this product. Use this field to override the default ChargePeriod, which is inherited from the product's Agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ChargeUntilDate">
            <summary>
            Applicable only to products that are charged on a recurring basis. The last date through which the ICC invoice run generated recurring charges for the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.CommercialProductId">
            <summary>
            ID of the commercial product used to generate this AgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.CommissionOption">
            <summary>
            Indicates whether a change to the product is commissionable. See <see cref = "T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.CommissionOptionTypes"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ContractEndDate">
            <summary>
            Expiration date of the product's Agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ContractPeriodId">
            <summary>
            Duration of the agreement (in months). Contract periods are configurable; if you pass in an int that has not been configured, ICC throws a Broken Rules error.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ContractSignatureDate">
            <summary>
            The date the contract was signed. This date is <b>not</b> changed when the product is activated.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ContractStartDate">
            <summary>
            Date on which the product's contract starts.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.CudChangedByInvoiceRunId">
            <summary>
            The InvoiceRun.Id when an Invoice Run changes the ChargeUntilDate. If any other process changes the CUD then this column is set to zero or null.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.CustomerId">
            <summary>
            ID of the product's customer (owner).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.CustomFields">
            <summary>
            Custom fields of each of the product's technical products. For details, see <see cref="T:PayMedia.ApplicationServices.SharedContracts.CustomFieldValue" />.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.DeviceIncluded">
            <summary>
            If True, the Commercial Product includes a device (specifically, a DPAD is created or exists).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.DevicesOnHand">
            <summary>
            If True, it means devices are on hand and no product needs to be shipped. It is populated by the Dealer. The value is "all or nothing"; for example, if several devices are required for a commercial product and one is require to be shipped, the value must be False.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.DisconnectionSetting">
            <summary>
            Defines which DisconnectionDateSetting enumerator the product uses.
            <br><b>Note: </b> When you create a new AgreementDetail, ICC automatically sets the DisconnectionSetting to AccountBased. To force ICC to use the user-configured CommercialProduct.DefaultDisconnectionSetting, you must set this value to UseDefaultProductDisconnectionSettingOnCreate.
            </br>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.DistributorId">
            <summary>
            ID of the distributor for this product. Applicable only if the product is distributor-dependent. For details, see <see cref="T:PayMedia.ApplicationServices.ProductCatalog.ServiceContracts.Availability"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.FinanceOptionId">
            <summary>
            ID of the user-configured finance option. Indicates the way of financing the product (for example, Rent, Fee, Lease, Sold).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.FinancialAccountId">
            <summary>
            ID of the financial account associated with this product's Agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.Id">
            <summary>
            Unique identifier.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.IsServiceContractProductSigned">
            <summary>
            If True, the customer has a service contract (warranty) for the product's devices.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.IsVoucherProduct">
            <summary>
            <b>Obsolete</b>. This field is no longer used to indicate if product is a voucher product. Use VoucherType instead.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.LastActivationDate">
            <summary>
            The date the product was last activated.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.MarketSegmentId">
            <summary>
            User-configured market segment associated with the sale of this product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ParentAgreementDetailId">
            <summary>
            Used for packaged commercial products. Identifies the parent product for this product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ParentPackagedCPId">
            <summary>
            Used for packaged commercial products. Identifies which product in the package is the parent product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.PrepaidManualDisconnectDate">
            <summary>
            Pre-paid products only. Date on which the pre-paid product is disconnected. Equals the Prepaid Disconnect Date extended by the Max Manual Grace Period. (PrepaidManualDisconnectDate= PrepaidDisconnectDate + MaxManualGracePeriod)
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.PreviousChargeUntilDate">
            <summary>
            The previous period through which the product has been invoiced.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.PurchaseOrderNumber">
            <summary>
            Purchase order number for the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.Quantity">
            <summary>
            Indicates the <i>number of this instance of the product </i>the customer has. <b>Note: </b>Configuration enables users to sell multiple instances of a product as well as selling a specific quantity of the product. This value indicates the quantity of this particular AgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ReplacedByProductId">
            <summary>
            Used for the upgrade/downgrade process. Indicates the new product that replaced this product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ReplacesProductId">
            <summary>
            Used for the upgrade/downgrade process. Indicates the old product that this product replaced.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.SalesPersonId">
            <summary>
            ID of the user-configured sales person (Associate) who sold the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.SandboxId">
            <summary>
            If this value is above zero, this object is a temporary object in a sandbox. For details, see <see cref="T:PayMedia.ApplicationServices.SandBoxManager.ServiceContracts.DataContracts.Sandbox"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.SandboxSkipValidation">
            <summary>
            During the finalisation of the sandbox, ICC checks the business rules for all objects. If any object fails this check, the sandbox will fail. If this value is True, ICC skips much of the business rule validation for this object.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.Segmentation">
            <summary>
            The time period segment used to calculate the product's discount.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.ShortTermSubscriptionPeriodId">
            <summary>
            If the charge period of the product is ShortTermSubscription (1000), then this will contain the ID of the short-term billing period that the agreement detail uses.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.SoftwareTransferToAgreementDetailId">
            <summary>
            As member product, the softwareware should be transferred to the new agreement detail. The field represents the new agreement detail id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.Status">
            <summary>
            User-configured status of the product. Statuses are normally set by user-configured SPEARs (not by passing in a value for this property).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.StockhandlerId">
            <summary>
            Used for commissions. The dealer who sold the product. This value is inherited from the product's Agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.WarrantyEndDate">
            <summary>
            Date and time on which the warranty for the product's devices ends.As per the new solution we came up with for customer warranty, the existing Warranty End Date should be removed from Product. Marked as Obsolete in MR29 on i34715
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx">
            <summary>
            A lightweight version of the AgreementDetail class. Improves response time because this class contains fewer properties than other versions of the AgreementDetail class. For a comparison of returned properties, see the following classes: <ul> <li>AgreementDetail </li> <li>AgreementDetailWithOfferDefinitions</li> <li>AgreementDetailWithPricing</li> </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.AgreementId">
            <summary>
            ID of the product's Agreement. An AgreementDetail must be linked to only one Agreement object.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.CancellationDate">
            <summary>
            If the product is active, this field is null. If the product is not active, this field holds the date that the product was last canceled. If the product is scheduled to be canceled, this field holds the date on which the product will be canceled.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.CommercialProductId">
            <summary>
            ID of the commercial product used to generate this AgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.CommercialProductName">
            <summary>
            Name of the commercial product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.Id">
            <summary>
            Unique identifier.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.IsProductNotValidInNewAddress">
            <summary>
            Used for the Service Address Change function. If True, the commercial product is not available at the new service address.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.ParentId">
            <summary>
            Parent agreementdetail id for PCP
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.Quantity">
            <summary>
            Indicates the <i>number of this instance of the product </i>the customer has. <br><b>Note: </b>Configuration enables users to sell multiple instances of a product as well as selling a specific quantity of the product. This value indicates the quantity of this particular AgreementDetail. </br>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.Status">
            <summary>
            Uer-configured status of the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.StockHandlerId">
            <summary>
            Used for commissions. The dealer who sold the product. This value is inherited from the product's Agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.StockHandlerName">
            <summary>
            Name of the stock handler for this product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.UserHasAccessToProduct">
            <summary>
            If False, the user does not have permission to edit the product because of the commercial product's AllowedUserRoles OR because the user's AllowedProductBusinessUnits does not match the business unit of the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.PricingInfoEx">
            <summary>
            Pricing information for the product. See <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.ProductCaptureOfferInfos">
            <summary>
            Information about the product's offers. See <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureOfferInfo"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailEx.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailHistory">
            <summary>
            Represents the history of (ICC event that acted on) an <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailHistory.AgreementDetail">
            <summary>
            The <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail"/> related to the history records.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailHistory.History">
            <summary>
            The <see cref="T:PayMedia.ApplicationServices.SharedContracts.History"/> information for the related <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailHistory.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailMetadata">
            <summary>
            Holds metadata information about agreement details.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailMetadata.Id">
            <summary>
            The agreement detail id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailMetadata.SuppressDisconnectionExtensionSetting">
            <summary>
            This field holds the SuppressDisconnectionExtensionSetting for a product. If set the product will not receive any configured manual disconnection date extensions. When a payment is applied to a product this setting will be cleared.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailMetadata.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailQuantityInfo">
            <summary>
            Represents information used to schedule a change to the quantity of an AgreementDetail (product).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailQuantityInfo.AgreementDetailId">
            <summary>
            ID of the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailQuantityInfo.AgreementDetailQuantity">
            <summary>
            This value is the new quantity.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailQuantityInfo.AllowQtyToBeUpdated">
            <summary>
            If True, users with sufficient permissions can update the quantity in the UI.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailQuantityInfo.CommercialProductName">
            <summary>
            Name of the commercial product associated with the AgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailQuantityInfo.UnitOfMeasurementId">
            <summary>
            ID of the configured measurement unit whose quantity was (or will be) will be changed.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailQuantityInfo.UnitOfMeasurementName">
            <summary>
            Name of the configured measurement unit whose quantity was (or will be) will be changed.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailQuantityInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.AgreementStatuses">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.CustomerSegments">
            <summary>
            Enable customer segments as a new condition for agreement detail spear
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.DisconnectionSettings">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.EventId">
            <summary>
            ICC system event. When this event is written to history and all configured conditions are met, ICC updates the product's status.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.FinanceOptions">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.NewStatus">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.Reason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.RequiredCustomerStatuses">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.RequiredFinancialAccountStatuses">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.RequiredStatuses">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.RuleGroupId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearRuleGroup">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearRuleGroup.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearRuleGroup.Active">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearRuleGroup.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearRuleGroup.Name">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearRuleGroup.Events">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearRuleGroup.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.Active">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.CanEditLos">
            <summary>
            If true, user can edit Line Of Service with this status
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.CanImportCDR">
            <summary>
            If true, user can import Call Detail Record for Line Of Service with this status
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.CanPromoteLos">
            <summary>
            If ture, user can promote Line Of Service with this status from Additional to Primary
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.CanWatch">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.Charge">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.ChargeCommission">
            <summary>
            Determines wheter a commission should be generated for the stockhander.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.Description">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.DisplayProduct">
            <summary>
            If this flag is set to true, this product will be displayed as an active product in the manage product screen. This flag also is used to decide if a product should be considered in a product combination check.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.DoNotReconnect">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.EnforceProductCombinationRules">
            <summary>
            If this flag is checked product combination rules will be enforced. We would recommend to skip combination rules for Suspended products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.EvaluateProductQuantity">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.IconColorId">
            <summary>
            Icon color used for conditional formatting. Foreign key to ICON_COLOR_.ID
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.IsHardwareCharge">
            <summary>
            This flag indicates if a once off charge should be generated for this status without being in our billable (charge) product status.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.Name">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.SuppressReconnectFee">
            <summary>
            Supress generation of the event 1171 (Reconnect Fee for First Product Connected) which could generate a once off charge.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.VisibleInLetter">
            <summary>
            If true, a product with this status may show in the letter; if false, the product cannot show in the letter.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailUpdateReasons">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailUpdateReasons.AgreementDetailChangeReasons">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailUpdateReasons.UpdateAgreementDetailQuantityReason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailUpdateReasons.UpdateAgreementDetailSegmentationReason">
            <summary>
            Schedule a future update of Agreement Detail Segmentation field
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailUpdateReasons.UpdateProductBillableFieldReason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailUpdateReasons.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailWithOfferDefinitions">
            <summary>
            A heavyweight version of the AgreementDetail class. Because this class returns more properties than the AgreementDetail class, fewer calls are required to get the information you need. For a comparison of returned properties, see the following classes: <ul> <li>AgreementDetail </li> <li>AgreementDetailEx </li> <li>AgreementDetailWithPricing</li> </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailWithOfferDefinitions.AgreementDetail">
            <summary>
            Represents the base , without price overrides or applied offers.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailWithOfferDefinitions.PriceOverrides">
            <summary>
            <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx"/> objects applied to the AgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailWithOfferDefinitions.ProductCaptureOfferInfos">
            <summary>
            <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureOfferInfo"/> objects applied to the AgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailWithOfferDefinitions.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailWithPricing">
            <summary>
            A heavyweight version of the AgreementDetail class. Because this class returns more properties than the AgreementDetail class, fewer calls are required to get the information you need. For a comparison of returned properties, see the following classes: <ul> <li>AgreementDetail </li> <li>AgreementDetailEx </li> <li>AgreementDetailWithOfferDefinitions</li> </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailWithPricing.ScheduleExists">
            <summary>
            If True, a ScheduleHeader record (to perform an event in the future) exists for this product. For information about ScheduleHeaders, see PayMedia.ApplicationServices.ScheduleManager.ServiceContracts.DataContracts.ScheduleHeader.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailWithPricing.AgreementDetail">
            <summary>
            The base <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail"/>, without pricing information.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailWithPricing.DevicesEx">
            <summary>
            The <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEx"/> objects associated with this product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailWithPricing.PricingInfoCollection">
            <summary>
            The <see cref="T:PayMedia.ApplicationServices.Pricing.ServiceContracts.DataContracts.PricingInfo"/> objects associated with this product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailWithPricing.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementHistory">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementHistory.Agreement">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementHistory.History">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementHistory.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation">
            <summary>
            This class sets a maximum number when capture new Agreement. Customer's total Agreement can't larger than the limitation's max number if capture's conditions match the limitation's configured conditions.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.AgreementTypes">
            <summary>
            Condition of agreement type list
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.CaptureType">
            <summary>
            0-Financial Account,1-Agreement
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.Countries">
            <summary>
            Condition of Country list
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.CustomerClasses">
            <summary>
            Condition of customer class list
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.CustomerTypes">
            <summary>
            Condition of customer type list
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.Description">
            <summary>
            Description of this condition rule
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.FinancialAccountTypes">
            <summary>
            Condition of financial account type list
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.Id">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.IsActive">
            <summary>
            Config active flag
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.MaxNum">
            <summary>
            The maximum capture number for each condition
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.Name">
            <summary>
            Name of the config
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo">
            <summary>
            Represents information for an Agreement whose quantity has been (or will be) changed. Used to schedule a change to an Agreement's quantity, which in turn, can affect the price a customer pays for the products on the agreement.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.AgreementId">
            <summary>
            ID of the agreement to be changed.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.AgreementName">
            <summary>
            A name (nickname) for the contract. Typically, the user enters this field based on customer request or operational procedures.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.EffectiveDate">
            <summary>
            Date on which changes to the quantity values are (or were) effective. Used when scheduling a quantity change.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.NumberOfUnits">
            <summary>
            Physical number of units of the selected Measurement Units. Each agreement can specify two measurement units, so that you can capture products that require two different measurement units.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.NumberOfUnits2">
            <summary>
            Second NumberOfUnits value.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.NumberOfUnits2MayParkEdit">
            <summary>
            If True and the user has the necessary permissions, this field is enabled in the UI for a user to edit or update.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.NumberOfUnitsMayParkEdit">
            <summary>
            If True and the user has the necessary permissions, this field is enabled in the UI for a user to edit or update.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.ReplaceScheduleId">
            <summary>
            If ICC is scheduled to replace an existing schedule, this field contains the ID of the schedule record that will be replaced.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.SandboxId">
            <summary>
            If this value is above zero, this object is a temporary object in a <see cref="T:PayMedia.ApplicationServices.SandBoxManager.ServiceContracts.DataContracts.Sandbox"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.ScheduleId">
            <summary>
            If the Agreement Quantity update is scheduled, this field contains the ID of the Schedule record. For more information, see the Schedule class.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.UnitOfMeasurement2Name">
            <summary>
            Name of the second configured measurement unit.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.UnitOfMeasurementId">
            <summary>
            ID of the first configured measurement unit.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.UnitOfMeasurementId2">
            <summary>
            ID of the first configured measurement unit.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.UnitOfMeasurementName">
            <summary>
            Name of the first configured measurement unit.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.DetailQuantityInfo">
            <summary>
            Represents information for a product (AgreementDetail) whose quantity has been (or will be) changed. Used to schedule a change to an AgreementDetail's quantity, which in turn, can affect the price a customer pays. For more information, see <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailQuantityInfo" />.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence">
            <summary>
            An <i>agreement sequence</i> is a configured flowchart for processing an agreement and its related entities: shipping orders, work orders, and products. There are many possible variations in agreement sequences, but the basic concept is that different types of customer orders require different processes. <ul> <li>For example, orders that require you to ship new hardware might require the shipping order's status to reach <i>shipped</i> before the installation service can be performed, and the work order's status to reach <i>completed</i> before the software can be activated. </li> </ul> ICC automatically applies the appropriate agreement sequence when you capture new products, edit existing products, or upgrade or downgrade products. Each time a user adds, upgrades, or downgrades an agreement's products, ICC applies the appropriate agreement sequence. Thus, a single agreement can have multiple active agreement sequences.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.Active">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.CustomerBusinessUnit">
            <summary>
            This field allows the users to select allowed business units.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.Description">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.DisconnectionSettings">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.HasNoShippingOrders">
            <summary>
            If this is true, the sequence can only be created if it has no shipping ordes.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.InitialAgreementSequenceStatusId">
            <summary>
            This field allows the user to select an initial agreement sequence status
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.Name">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.Reasons">
            <summary>
            This field will show the reasons for the event selected in TriggerEvent.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.TriggerEventId">
            <summary>
            Allows a user to select an event to associate with this agreement sequence condition.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.UserRoles">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.WorkOrderServiceTypes">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.AgreementSequenceStepCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceEntityStatus">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceEntityStatus.AgreementSequenceInstanceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceEntityStatus.EntityId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceEntityStatus.EntityServiceTypeKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceEntityStatus.EntityStatusKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceEntityStatus.EntityType">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceEntityStatus.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceEntityStatus.LastStatusChangeDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceEntityStatus.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance.AgreementId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance.AgreementSequenceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance.AgreementSequenceStatusKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance.WarningMessages">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance.AgreementSequenceEntitiesStatus">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStatus">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStatus.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStatus.Active">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStatus.Description">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStatus.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStatus.Name">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStatus.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep">
            <summary>
            An <i>agreement sequence step </i>specifies updates to make to one or more of an agreement's entities (work orders, shipping orders, products, and so on) under particular conditions. Not every step in an agreement sequence is always performed; steps can be skipped and even repeated. Each step specifies the following: <ul> <li>The <i>entity type </i>whose status must be changed to trigger ICC to evaluate the step. Note that changes to status can be made automatically as a result of SPEAR configuration, or manually by a user.</li> </ul> For example, if the triggering entity type is <i>shipping order</i>, ICC evaluates the step whenever the status of one of the agreement's shipping orders changes. <ul> <li>Additional conditions. For example, the step might be performed only when the shipping order's status is <i>delivered</i>, the work order's status is <i>pending</i>,<i> </i>and the service type is <i>installation</i>.</li> <li>Specific status updates and other actions. For example, the step might specify a reason for updating a work order's status to <i>assign installer </i>and for updating the overall sequence's status to <i>waiting for installer assignment</i>. SPEAR configuration determines which statuses to apply based on the reason specified in the step. </li> </ul>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.AgreementSequenceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.AutomaticallyDistributeFundsToPrepaidProducts">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.CancelPrepaymentQuote">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.CancelWorkOrderReasonKey">
            <summary>
            Reason for event 48-cancel workorder
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.CloseWorkOrderReasonKey">
            <summary>
            Reason for Event 57 Close Work Order. Used to complete work orders through the Agreement Sequencing function.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.DateFormulaId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.DisplayOrder">
            <summary>
            default is 0
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.EndAgreementDetailDateFormulaId">
            <summary>
            If the product activation should be shceduled for a future date populate this field with a date formula id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.EndAgreementDetailReasonKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.EndAgreementDetailReasonServiceTypeKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.EndAgreementReasonKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.EndAgreementSequenceStatusKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.EndShippingOrderReasonKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.EndShippingOrderReasonServiceTypeKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.EndWorkOrderReasonKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.EndWorkOrderReasonServiceTypeKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.ScheduleNewDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.StartAgreementDetailStatusKeys">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.StartAgreementDetailStatusWorkOrderServiceTypeKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.StartAgreementSequenceStatusKeys">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.StartAgreementStatusKeys">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.StartPrepayQuoteStatusKeys">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.StartShippingOrderStatusKeys">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.StartShippingOrderStatusWorkOrderServiceTypeKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.StartWorkOrderStatusKeys">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.StartWorkOrderStatusWorkOrderServiceTypeKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.TriggerEvent">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.UpdateAgreementDetailStatusDateFormulaId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.UpdateAgreementDetailStatusReasonKey">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.WarningMessage">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSoftwareLinkingInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSoftwareLinkingInfo.AgreementId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSoftwareLinkingInfo.CreatedSoftwareLinks">
            <summary>
            A list of all software links created on this agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSoftwareLinkingInfo.RemovedSoftwareLinks">
            <summary>
            A list of all software links removed on this agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSoftwareLinkingInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSpear">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSpear.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSpear.AgreementTypes">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSpear.EventId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSpear.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSpear.NewStatus">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSpear.Reason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSpear.RequiredStatuses">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSpear.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus.Active">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus.Description">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus.IncludeInTotalUnitsCrossAgrees">
            <summary>
            This field indicates if this status should be included in the total number of units for measurement type. The total will be done across agreements for the same measurement type.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus.IsExclFromServiceAddressChange">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus.Name">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus.ProductActivationProrateQuoteReason">
            <summary>
            This field stores the reason for Product Activation (Event 5229) and will only be used in the quoting process when a prorate has been defined for this event.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType">
            <summary>
            An <i>agreement type</i> is a configured set of rules that you use to manage a particular type of contract. Typically, you use different rules for residential customers (B2Cs), commercial customers (B2Bs), and customers who have <i>business roles</i> (business partners).
            <ul>
            <li>For example, you might require a credit check before shipping products to new distributors, but not for new commercial or residential customers. Similarly, you might require <i>pre-payment </i>before product activation for residential customers, but not for commercial customers. </li>
            </ul>
            Agreement types can be restricted to selected customer types.<font color="#800080"> </font>Different agreement types can also have different price adjustment rules, contract periods, suspension rules, product quantity requirements, and so on.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.AddDuration">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.AdjustContractEndDateByFormula">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.AdjustProductEndDateByFormula">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.AlignAgreementOnSuspend">
            <summary>
            If this flag is true, any products that are suspended will cause the contract end date of the agreement to be updated.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.AlignEndDateOnSuspend">
            <summary>
            If this flag is true, any products that are suspended will have their end date aligned with the end of the month. This flag will have no effect if the AddDuration flag is not set.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.AllowAdditionalDetails">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.AllowedBusinessRoles">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.AllowedCustomerBusinessUnits">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.AllowedCustomerTypes">
            <summary>
            This property lets you filter the returned list of agreement types based on their associated customer types.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.AllowedUserRoles">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.AllowSleep">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.ContractPeriod">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.DateFormulaId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.Description">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.EarliestStartDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.EventId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.EventReasonIdMayNotHave">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.EventReasonIdMustHave">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.IsDefault">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.LetterTemplateId">
            <summary>
            Letter Template for Prepay Quote
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.LimitAutomaticLinkingToAgreementType">
            <summary>
            Obsolete: If this flag is set, automatic linking of devices is scoped to this agreement type
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.MinimumPaymentPercent">
            <summary>
            A payment of at least this amount must be received for the Agreement Status to be updated.
            <ul>
            <li><b>This property applies to "Wait for Payment" agreements--not to voucher products or prepaid quotes for products.</b></li>
            </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.NewAgreementTypeId">
            <summary>
            Upon Payment, the Agreement Type can be updated
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.NumberMonthsToPrepay">
            <summary>
            Multiply Number of Months to Prepay with the Recurring Amount on the List Price Condition - need to find the appropriate Recurring List Price.
            <ul>
            <li><b>This property applies to "Wait for Payment" agreements--not to voucher products or prepaid quotes for products.</b></li>
            </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.NumberOfUnits2MayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.NumberOfUnits2MayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.NumberOfUnits2MustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.NumberOfUnits2MustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.NumberOfUnitsMayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.NumberOfUnitsMayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.NumberOfUnitsMustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.NumberOfUnitsMustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.PriceAmountFormula">
            <summary>
            This is a date formula use to determine the price date when charging for agreement details.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.ReasonActivateProduct">
            <summary>
            When a WaitForPayment quote is fulfilled the products on the quote will be activated if this field is populated with an activation reason.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.ReasonToUpdateAgreementStatus">
            <summary>
            In the wait for payment process this is the reason used to update Agreement status when payment is received.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.RequireUniqueBusinessUnit">
            <summary>
            If this flag is true all active products that belong to this agreement must have the same business unit.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.ShowOrderConfirmation">
            <summary>
            Flag determining whether or not an Order Confirmation page should be shown when capturing agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.TermsAndConditions">
            <summary>
            Terms and Conditions associated with Agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.UnitsOfMeasurement2MayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.UnitsOfMeasurement2MayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.UnitsOfMeasurement2MustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.UnitsOfMeasurement2MustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.UnitsOfMeasurementMayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.UnitsOfMeasurementMayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.UnitsOfMeasurementMustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.UnitsOfMeasurementMustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.WaitForPayment">
            <summary>
            Indicates that a prepayment must be made before the product can be activated.
            <ul>
            <li><b>This property applies to "Wait for Payment" agreements--not to voucher products or prepaid quotes for products.</b></li>
            </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.RuleCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.AgreementTypeId">
            <summary>
            FK of Agreement_Type table
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.Id">
            <summary>
            primary key
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.NumberOfUnits2MayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.NumberOfUnits2MayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.NumberOfUnits2MustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.NumberOfUnits2MustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.NumberOfUnitsMayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.NumberOfUnitsMayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.NumberOfUnitsMustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.NumberOfUnitsMustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.RoleName">
            <summary>
            Role_Name of Default_Role table
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.UnitsOfMeasurement2MayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.UnitsOfMeasurement2MayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.UnitsOfMeasurement2MustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.UnitsOfMeasurement2MustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.UnitsOfMeasurementMayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.UnitsOfMeasurementMayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.UnitsOfMeasurementMustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.UnitsOfMeasurementMustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRule.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.ContractPeriod">
            <summary>
            This is an odd field for this entity but its required to have this field just to satisfy AgreementType
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.NumberOfUnits2MayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.NumberOfUnits2MayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.NumberOfUnits2MustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.NumberOfUnits2MustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.NumberOfUnitsMayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.NumberOfUnitsMayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.NumberOfUnitsMustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.NumberOfUnitsMustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.UnitsOfMeasurement2MayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.UnitsOfMeasurement2MayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.UnitsOfMeasurement2MustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.UnitsOfMeasurement2MustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.UnitsOfMeasurementMayParkCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.UnitsOfMeasurementMayParkEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.UnitsOfMeasurementMustEnterCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.UnitsOfMeasurementMustEnterEdit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementTypeRuleSet.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteChannel">
            <summary>
            A channel within an a la carte product. For more information, see the <i>ALaCarteProduct </i>class.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteChannel.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteChannel.AlaCarteProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteChannel.ChannelId">
            <summary>
            This points to the actual channel selected by the customer.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteChannel.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteChannel.SandboxId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteChannel.SandboxSkipValidation">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteChannel.TechnicalChannelId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteChannel.Weight">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteChannel.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct">
            <summary>
            An <i>a la carte product </i>is a commercial product that identifies a specific set of channels and allows customers to subscribe to a subset of the channels based on a point system. The price for the a la carte product is the same regardless of which channels you choose. <ul> <li>When configuring an a la carte product, you specify a point value for each individual channel and a maximum number of points that a customer can use. Customers then choose any subset of channels that does not exceed the maximum points. For example, you might configure one a la carte product that allows customers to choose up to fifteen points worth of channels whose individual point values vary, and another a la carte product that allows customers to choose any two of ten premium channels whose point values do not vary.</li> </ul>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.AgreementDetailId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.CommercialProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.CustomerId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.ProductPoints">
            <summary>
            This is the sum of all weights (points) of the selected channels
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.RemainingPoints">
            <summary>
            This is a calculated field from the TechnicalProduct.Weight - ProductPoints
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.SandboxId">
            <summary>
            If greatern then zero, this object belongs to a sandob
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.SandboxSkipValidation">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.TechnicalProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.ALaCarteChannels">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CableAddressChangeDefaults">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CableAddressChangeDefaults.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CableAddressChangeDefaults.CancelOfferReason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CableAddressChangeDefaults.CancelProductReason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CableAddressChangeDefaults.CopyOfferEndDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CableAddressChangeDefaults.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CancelPrepayQuoteRequest">
            <summary>
            Defines the parameters for cancelling a prepay quote
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CancelPrepayQuoteRequest.PrepayQuoteIds">
            <summary>
            A list of prepay quotes
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CancelPrepayQuoteRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CancelPrepayQuoteResponse">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CancelPrepayQuoteResponse.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.AllowOldDateCancel">
            <summary>
            if Now is true
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.AllowOldDateDisconnect">
            <summary>
            if Now is true
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.AllowOldDateReconnect">
            <summary>
            if Now is true
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.DateFormulaIdCancel">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.DateFormulaIdDisconnect">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.DateFormulaIdReconnect">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.EventOccursCancel">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.EventOccursDisconnect">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.EventOccursReconnect">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.MayParkOnDateCancel">
            <summary>
            if Now is true
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.MayParkOnDateDisconnect">
            <summary>
            if Now is true
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.MayParkOnDateReconnect">
            <summary>
            if Now is true
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.PromptForLetterCancel">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.PromptForLetterDisconnect">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.PromptForLetterReconnect">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate">
            <summary>
            Default date options for Cancellations, Reconnections, and Disconnections
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.AgreementTypeIds">
            <summary>
            Agreement types to which these defaults apply
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.CancelAdjustToAlignWithIPDate">
            <summary>
            Whether to adjust cancel date to align with invoice profile date
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.CancelAllowInPast">
            <summary>
            Whether a cancel date in the past is allowed. This flag is currently not supported.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.CancelAllowOverrideAfter">
            <summary>
            Whether the overridden cancel date can be after the default date
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.CancelAllowOverrideBefore">
            <summary>
            Whether the cancel default date may be changed to an earlier date.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.CancelDateFormulaId">
            <summary>
            Associated configured date formula id for cancel
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.CancelProductReasonIds">
            <summary>
            Reasons to which these defaults apply
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.CommercialProductCombinationIds">
            <summary>
            Commercial product combinations to which these defaults apply
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.CustomerClassIds">
            <summary>
            Customer classes to which these defaults apply
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.CustomerTypeIds">
            <summary>
            Customer types to which these defaults apply
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.Description">
            <summary>
            Description of these CaReDisc Default Date options
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.DisconnectAdjustToAlignWithIPDate">
            <summary>
            Whether to adjust disconnect date to align with invoice profile date
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.DisconnectAllowInPast">
            <summary>
            Whether a disconnect date in the past is allowed. This flag is currently not supported.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.DisconnectAllowOverrideAfter">
            <summary>
            Whether the overridden disconnect date must be after the default date
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.DisconnectAllowOverrideBefore">
            <summary>
            Whether the disconnect default date may be changed to an earlier date.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.DisconnectDateFormulaId">
            <summary>
            Associated configured date formula id for disconnect
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.FinancialAccountTypeIds">
            <summary>
            Financial account types to which these defaults apply
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.Id">
            <summary>
            Unique id of these CaReDisc Default Date options
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.IsActive">
            <summary>
            Whether these CaReDisc Default Date options are active
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.Name">
            <summary>
            Name of these CaReDisc Default Date options
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.ReconnectAdjustToAlignWithIPDate">
            <summary>
            Whether to adjust reconnect date to align with invoice profile date
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.ReconnectAllowInPast">
            <summary>
            Whether a reconnect date in the past is allowed. This flag is currently not supported.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.ReconnectAllowOverrideAfter">
            <summary>
            Whether the overridden reconnect date may be after the default date
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.ReconnectAllowOverrideBefore">
            <summary>
            Whether the reconnect default date may be changed to an earlier date.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.ReconnectDateFormulaId">
            <summary>
            Associated configured date formula id for reconnect
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.UserRoles">
            <summary>
            User Roles to which these defaults apply
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoRequest">
            <summary>
            Paramaters for fetching CaReDisc information.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoRequest.AgreementDetailIds">
            <summary>
            List of products to check for CaReDisc rules.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoRequest.ExecutionDate">
            <summary>
            An optional date paramter. If prodvided the date will be valided against the CaReDisc rules.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoRequest.SpearEvent">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoResponse">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoResponse.AlignmentDay">
            <summary>
            If this value is specified then the execution date must be aligned to the day provided (this is the IP day of the financial account)
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoResponse.CaReDiscRuleIds">
            <summary>
            A list of all CareDiscDefaultDate RuleIds that were evaluated for this CaReDiscInfo object.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoResponse.DefaultExecutionDate">
            <summary>
            The default DateTime this CaReDisc operation can be performed.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoResponse.IsRequestDateValid">
            <summary>
            If the request object provided an execution date of the CaReDisc event this flag will hold the evaluation of that date against the CaReDisc rules found for the provided products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoResponse.MaxExecutionDate">
            <summary>
            The largest allowed date value that can be selected.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoResponse.MinExecutionDate">
            <summary>
            The lowest execution date that can be selected.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoResponse.WarningText">
            <summary>
            A message containing the reason the IsRequestDateValid field is false.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoResponse.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.AllowAllBusinessUnits">
            <summary>
            If true then all business units are valid for the product. If false then the PotentialBusinessUnits will contain the allowed business units.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.CommercialProductCategoryId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.CommercialProductCategoryName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.CommercialProductCategoryPriority">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.CommercialProductCategoryWeight">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.CommercialProductId">
            <summary>
            Gets the unique identifier for this commercial product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.CommercialProductName">
            <summary>
            Gets or sets the name of the commercial product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.CommercialProductUnitOfMeasurementId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.ContractPeriodToOverride">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.DefaultBusinessUnitId">
            <summary>
            The default Business Unit.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.DefaultFinanceOptionId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.IsDistributorBusinessUnit">
            <summary>
            If this flag is true, the PotentialBusinessUnitIds were derived from one or more distributors. If false, the values come from the commercial product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.IsServiceContract">
            <summary>
            Indicate that the commecial product is warranty.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.ListPriceAmount">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.PotentialBusinessUnitIds">
            <summary>
            Gets or sets an array of potential business unit ids which this commercial product will contain.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.TechnicalProductIds">
            <summary>
            Gets or sets an array of technical product IDs which this commercial product will contain.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.Terms">
            <summary>
            Gets or sets the Warranty Terms and Conditions.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.UnavailableChannels">
            <summary>
            The list of channel ids that are <u>not</u> available for this commercial product at the given valid address.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CategoryProductPriceEx.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChangeProductDevicesParams">
            <summary>
            This defines the data that is required to change the linking between products and devices during a product cancelation.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChangeProductDevicesParams.CustomerId">
            <summary>
            The customer that will have his devies changed to different products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChangeProductDevicesParams.Reason">
            <summary>
            The reason for the 112 event that will be performed on the dpad when the device is switched.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChangeProductDevicesParams.ResetExistingDeviceSwitch">
            <summary>
            If this value is true, all existing device switch records will be removed from the sandbox before the new device switches are performed. This can be used to prevent two identical calls to this method from doing "nothing" because the devices get switch back to their origonal product on the 2nd call.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChangeProductDevicesParams.SandboxId">
            <summary>
            If this value is above zero, this object is a temporary object in a sandbox. If this is not provided, the devices will change products immediately.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChangeProductDevicesParams.DevicesToExchange">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChangeProductDevicesParams.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx">
            <summary>
            This is a aggragate object that has channel and infrastructure information.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.AggregatorId">
            <summary>
            The aggregator of this channel.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.ChannelCategoryId">
            <summary>
            Channel Category is to determine what type of channel is being configured. Categories are configured by user and can include values like movies, sciences, etc...
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.ChannelCategoryName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.ChannelShortName">
            <summary>
            Short name of channel/Identifier such as BBC.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.ChannelTypeId">
            <summary>
            Channel Type defines the technical capabilities of the channel (Analog, Digital, Internet) and playes a roll in the Infrastructure module.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.DisplayChannelGroupId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.DisplayChannelNumber">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.EndDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.Id">
            <summary>
            Primary key for a channel.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.IsActive">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.IsBillable">
            <summary>
            Identify whether the channel is a pay channel or free.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.Name">
            <summary>
            Long name of channel such as Home Box Office (HBO)
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.ProductProviderId">
            <summary>
            The provider of this channel.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.StartDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChannelEx.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CheckAgreementLimitationRequest">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CheckAgreementLimitationRequest.AgreementId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CheckAgreementLimitationRequest.AgreementType">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CheckAgreementLimitationRequest.CustomerId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CheckAgreementLimitationRequest.FinancialAccountId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CheckAgreementLimitationRequest.FinancialAccountType">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CheckAgreementLimitationRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ContractPeriod">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ContractPeriod.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ContractPeriod.Id">
            <summary>
            The ID also serves as the value, which is the number of months this contract period defines.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ContractPeriod.IsActive">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ContractPeriod.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceRequest">
            <summary>
            Request object for creating Consumer Devices.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceRequest.AgreementId">
            <summary>
            AgreementId to link CE Device to. This field is required.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceRequest.MACAddress">
            <summary>
            MACAddress of Device. This value is also used as device Serialnumber. If device does not exist it will be created. This field is required.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceRequest.ModelId">
            <summary>
            ModelId for device. This is also used to detrmine the technical product. This field is required.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceRequest.ReasonCreateDevice">
            <summary>
            Reason for create Device. This field is optional. Not used if the device already exists or the event 749 does not require reason.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceRequest.ReasonCreateDpad">
            <summary>
            This is the reason for creating the Device per Agreement detail record. Wheter it is required depends on configuration.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceRequest.SandboxId">
            <summary>
            Optional SandboxId. If specified any Device per agreement detail created will be part of the sandbox and you will later have to Finalize the sandbox.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceResult">
            <summary>
            Request object for creating Consumer Devices.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceResult.DeviceId">
            <summary>
            Id of Device created or linked.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceResult.DidAutomaticSoftwareLinkingSucceed">
            <summary>
            This flag indicate whether the caller need do further manual software linking. There are two scenarios make this flag true: 1. there are SPADs linked with DPAD. 2. If there is no SPAD on DPAD but there are some unlinked software product needs to be linked.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceResult.DpadId">
            <summary>
            Id of Dpad record created.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceResult.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CustomerEx">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CustomerEx.DefaultAddressId">
            <summary>
            Stores or returns a default address (typically the first address entered that is not of another defined address type).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CustomerEx.Id">
            <summary>
            Returns the customer Id. (read only)
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CustomerEx.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CustomerProductInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CustomerProductInfo.ChannelCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CustomerProductInfo.ProductServiceInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CustomerProductInfo.TechnicalProductCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CustomerProductInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceChild">
            <summary>
            The child in a device relationship
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceChild.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceChild.DeviceId">
            <summary>
            Child device
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceChild.DeviceRelationId">
            <summary>
            Id of the device relationship this child deivce belongs to. Id of the device relationship this child deivce belogns to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceChild.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceChild.SandboxId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceChild.SandboxSkipValidation">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceChild.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEntitlement">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEntitlement.AggregatedFromEntity">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEntitlement.AgreementDetailId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEntitlement.DeviceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEntitlement.EndDate">
            <summary>
            This start date is taken from the ContractEndDate field in the AgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEntitlement.SerialNumber">
            <summary>
            The serial number of the device being provisioned.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEntitlement.StartDate">
            <summary>
            This start date is taken from the ContractStartDate field in the AgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEntitlement.Entitlements">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEntitlement.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEx">
            <summary>
            A lightweight data contract that holds device information for an <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail"/>. See the following classes for more information: <ul>
            <li>PayMedia.ApplicationServices.Devices.ServiceContracts.DataContracts.Device</li> <li><see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail"/></li>
            <li><see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail"/></li> </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEx.Addressable">
            <summary>
            If True, the device is an addressable device, meaning that it can receive provisioning commands (for example, a smartcard).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEx.DeviceId">
            <summary>
            ID of the device. Populated from BUSINESSDATA.DEVICE.ID.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEx.DevicePerAgreementDetailId">
            <summary>
            ID of the related DevicePerAgreementDetail (DpAD) record. For more information about DpADs, see PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEx.DeviceSerialNumber">
            <summary>
            Unique serial number. Contains only [A-Z][a-z][0-9]. Since device serial numbers are unique in ICC, the serial number can be used to uniquely identify other associated entities, such as customer, commercial product, technical product, agreement, work order, and financial account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEx.IsCurrent">
            <summary>
            If True, the device's status indicates it is active.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEx.TechnicalProductId">
            <summary>
            ID of the user-configured <see cref="T:PayMedia.ApplicationServices.ProductCatalog.ServiceContracts.DataContracts.TechnicalProduct"/> for this device.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceEx.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceLinkMessage">
            <summary>
            Message for device link unsuccessful reason.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceLinkMessage.Content">
            <summary>
            The device link operation failed reason for current device.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceLinkMessage.DeviceId">
            <summary>
            The device id .
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceLinkMessage.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail">
            <summary>
            A <i>DPAD </i>(device per agreement detail) is a record in the ICC database that links a hardware technical product to a customer's product (agreement detail). This link enables ICC to associate the customer's software technical products and hardware technical products through their common relationship with the agreement detail.
            <ul>
            <li>Prior to version 6, a customer's software and hardware were linked by the customer's device ID. This dependency limited system flexibility in regard to swaps and provisioning. DPADs remove these limitations because DPADs provide a link between a customer's hardware and software without the need for a device ID.</li>
            </ul>
            ICC generates a DPAD record when a customer buys a product that contains a hardware technical product.
            <ul>
            <li>For example, the Silver Package commercial product consists of a smartcard, decoder, and a Silver channels subscription. When a customer buys the Silver Package, ICC generates two DPAD records: one to link the smartcard to the customer's agreement detail, and another to link the decoder to the customer's agreement detail. ICC also creates an SPAD (software per agreement detail) record that links the Silver channels to the customer's smartcard. </li>
            </ul>
            Other information in the DPAD record allows ICC to access the technical product's device ID, valid address, preferred model, and orderable event settings (applicable only to addressable devices).
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.AgreementDetailId">
            <summary>
            This Agreement Detail is the one associated with the device.
            Note that for CE devices this field will be empty insted AgreementId will be used.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.AgreementId">
            <summary>
            AgreementId associated with the device. For CE devices only agreementId will be specified since there is no AgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.Current">
            <summary>
            Used with pre-installed devices. Indicates whether the device is linked to the distributor (MDU) who owns the device or an end customer who lives at the distributor's (linked) address. If true, the device is with the customer at that address; if false, the device can be reassigned to a new customer who moves into that address.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.DeviceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.DeviceLinkDate">
            <summary>
            This is the date the DeviceId was newly added or modified on the DPAD. It will help prevent having to look through the history to try and determine when the device was linked to the Agreement Detail.
            Events that will/could modify the DeviceLinkDate:
            <ul>
            <li>146: Swop Old Device Immediately</li>
            <li>148: Link Device to Unused Product</li>
            <li>928: LInk Customer Product to Devce Serial Number</li>
            <li>111: Link Product to Device</li>
            </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.DeviceLocationComments">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.EventSettingId">
            <summary>
            This links the Dpad to an event setting (OrderableEvent). This is set when the Ordered Event is created. This should always be set if the deviceId is not zero.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.Id">
            <summary>
            DevicesPerADId
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.PreferredModelId">
            <summary>
            This is the ModelId preferred by the customer. It is to be sent to the Shipper. It is captured once and never updated. The shipped model (the one on the device) may be different than the PreferedModelId
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.SandboxId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.SandboxSkipValidation">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.TechnicalProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.ValidAddressId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.SoftwarePerAgreementDetails">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailHistory">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailHistory.DevicePerAgreementDetail">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailHistory.History">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailHistory.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailWithWarrantyProduct">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailWithWarrantyProduct.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailWithWarrantyProduct.AgreementDetailId">
            <summary>
            Gets or sets the service contract agreement detail id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailWithWarrantyProduct.DpadId">
            <summary>
            Gets or sets a device id per service contract agreement detail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailWithWarrantyProduct.Id">
            <summary>
            Gets the unique identifier for the link betweenagreement detail and device.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailWithWarrantyProduct.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailWithWarrantyProductHistory">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailWithWarrantyProductHistory.DevicePerAgreementDetailWithWarrantyProduct">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailWithWarrantyProductHistory.History">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailWithWarrantyProductHistory.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationship">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationship.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationship.AgreementId">
            <summary>
            Device relationships are set on an agreement
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationship.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationship.ParentDeviceId">
            <summary>
            ParentDeviceId is for the device as a parent. Only one parent for one agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationship.SandboxId">
            <summary>
            If this value is non-zero this object is a temporary object in a sandbox.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationship.SandboxSkipValidation">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationship.ChildDevices">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationship.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationshipHistory">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationshipHistory.DeviceRelationship">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationshipHistory.History">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationshipHistory.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceSwitch">
            <summary>
            Contains information about switching devices between two DevicePerAgreementDetails
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceSwitch.DeviceAgreementDetailFrom">
            <summary>
            The identifier of the first DeviceAgreementDetail to switch devices.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceSwitch.DeviceAgreementDetailTo">
            <summary>
            The identifier of the second DeviceAgreementDetail to switch devices.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceSwitch.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceWarrantyInfo">
            <summary>
            A meta object representing a DpadWarrentyProduct
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceWarrantyInfo.DeviceWarrantyProductId">
            <summary>
            The id of the base DpadWarrantyProduct.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceWarrantyInfo.WarrantyCommercialProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceWarrantyInfo.WarrantyCommercialProductName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceWarrantyInfo.WarrantyDeviceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceWarrantyInfo.WarrantyDeviceModelDescription">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceWarrantyInfo.WarrantyDeviceModelId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceWarrantyInfo.WarrantyDeviceSerialNumber">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceWarrantyInfo.WarrantyProductAgreementId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceWarrantyInfo.WarrantyProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceWarrantyInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo">
            <summary>
            This class combines information from the DPAD, TP and Device classes. <ul> <li>See <i>DevicePerAgreementDetail </i>class for more information on DPAD.</li> <li>See <i>TechnicalProduct </i>class for more information on TP.</li> <li>See <i>Device </i>class for more information on Device.</li> </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.CommercialProductName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.Current">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.DeviceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.DeviceLocationComments">
            <summary>
            Used to set the DeviceLocationComments attribute of Dpad
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.ExternalId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.IsVoIPProduct">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.MACAddress1">
            <summary>
            The serial number of the relevant hardware device.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.MACAddress2">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.PairedWithNext">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.PreferredModelId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.SerialNumber">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.SuppressShippingOrder">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.TechnicalProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.TechnicalProductName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.UseExternalId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.ValidAddressId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.AllowedModels">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Entitlement">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Entitlement.CASystemId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Entitlement.Entitlements1">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Entitlement.Entitlements2">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Entitlement.Entitlements3">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Entitlement.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Entitlement.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FailedAgreementDetail">
            <summary>
            This class represents an agreement detail that failed its status change via spear.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FailedAgreementDetail.FailureMessage">
            <summary>
            The reason that this agreement detail could not change its status via SPEAR.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FailedAgreementDetail.AgreementDetail">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FailedAgreementDetail.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequenceInstanceCriteria">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequenceInstanceCriteria.FindItemType">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequenceInstanceCriteria.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequenceInstanceCriteria.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequencesCriteria">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequencesCriteria.CustomerBusinessUnit">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequencesCriteria.DisconnectionSetting">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequencesCriteria.HasNoShippingOrders">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequencesCriteria.Reason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequencesCriteria.ServiceTypeIds">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequencesCriteria.TriggerEventId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequencesCriteria.UserRole">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequencesCriteria.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindDependentProductsRequest">
            <summary>
            This is the paramter contract for FindDependentProducts
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindDependentProductsRequest.AllActiveProducts">
            <summary>
            All active products on customer
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindDependentProductsRequest.ProductsToRemove">
            <summary>
            Products to cancel or disconnect
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindDependentProductsRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindPotentialSwapProductCriteria">
            <summary>
            This class holds the parmaters necessary to find potential devices that can be swapped during a product cancelation procedure.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindPotentialSwapProductCriteria.CustomerId">
            <summary>
            The customer to find the potential swap devices for.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindPotentialSwapProductCriteria.SandboxId">
            <summary>
            The sandbox identifier that contains products to be canceled. If this value is above zero, this object is a temporary object in a sandbox.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindPotentialSwapProductCriteria.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindTopUpItemsCriteria">
            <summary>
            The class defines the criteria to locate TopUpItems.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindTopUpItemsCriteria.AutomaticRedistributionForAccountId">
            <summary>
            If this value is set, the method will return the products eligible for an automatic redistribution and also fill in the products amount and number of days based on the current funds in the financial account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindTopUpItemsCriteria.TopUpScheduleId">
            <summary>
            The top up process can be attached to an upgrade process. Passing in the id of the attached schedule will cause the find process to simulate the schedules and return the voucher information attached to the schedule.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindTopUpItemsCriteria.LoadCriteria">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindTopUpItemsCriteria.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindVoucherFundsTransfersCriteria">
            <summary>
            This class is used to find eligible products for the voucher funds transfer process.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindVoucherFundsTransfersCriteria.AgreementDetailLoadCriteria">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindVoucherFundsTransfersCriteria.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FulfilPrepayQuoteRequest">
            <summary>
            Defines the parameters for fulfilling a prepayment quote (also known as a Wait for Payment quote).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FulfilPrepayQuoteRequest.FinancialAccountId">
            <summary>
            ID of the financial account associated with the prepayment quote.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FulfilPrepayQuoteRequest.PrepayQuoteIds">
            <summary>
            A list of prepayment quotes to fulfil.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FulfilPrepayQuoteRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FulfilPrepayQuoteResponse">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FulfilPrepayQuoteResponse.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FutureCustomerInfo">
            <summary>
            This class hold information to evalute future items dealing with product capture.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FutureCustomerInfo.AgreementDetailIds">
            <summary>
            if this array contains AgreementDetailIds then it must be in sync with the ProductsForOffers property. The first entry in this property must be the AgreementDetailId and the first entry in the ProductsForOffers property must be the new product Id for that agreement detail Id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FutureCustomerInfo.AgreementId">
            <summary>
            The current agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FutureCustomerInfo.EvaluationDate">
            <summary>
            The date in which the evaluation of potential items is to occur.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FutureCustomerInfo.ProductsForOffers">
            <summary>
            If this array contains any commercial products, then the product offers returned will only be applicable to the given products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FutureCustomerInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FutureManageProductReferencePackage">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FutureManageProductReferencePackage.Offers">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FutureManageProductReferencePackage.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsRequest">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsRequest.AgreementDetailIds">
            <summary>
            Agreement Management Ids
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsResult">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsResult.AgreementDetailId">
            <summary>
            ID of the passed in detail record.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsResult.DaysRemaining">
            <summary>
            Days remaining for FTA contract.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsResult.ReturnStatus">
            <summary>
            Status of the call.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsResult.ReturnStatusError">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsResult.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsResults">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsResults.Results">
            <summary>
            Days remaining for FTA contract.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsResults.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GlobalizationString">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GlobalizationString.Value">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GlobalizationString.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.KeyedLookup">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.KeyedLookup.Key">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.KeyedLookup.LookupCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.KeyedLookup.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.LinkRequest">
            <summary>
            Holds the hardware information necessary for linking.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.LinkRequest.DevicePerAgreementDetailId">
            <summary>
            DpAD ID. For details, see <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.LinkRequest.PortId">
            <summary>
            Port ID (used with VoIP devices).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.LinkRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductDetailPackage">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductDetailPackage.AgreementID">
            <summary>
            Required. Unique identifier of the customer's agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductDetailPackage.AgreementDetailExCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductDetailPackage.ChannelCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductDetailPackage.MiscCharges">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductDetailPackage.ProductCaptureOfferInfos">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductDetailPackage.TechnicalProductCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductDetailPackage.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage.CurrencyId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage.CurrentOfferDefinitionIds">
            <summary>
            The list of current offers for the customer.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage.FinancialAccountId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage.Agreement">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage.AgreementType">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage.CategoryProductPriceExCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage.Customer">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage.GlobalizationStringCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage.KeyedLookupCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage.OfferDefinitionExCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageAgreementProductReferencePackage.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest">
            <summary>
            This class is used to link and unlink software to and from hardware.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.AgreementDetailId">
            <summary>
            ID of the AgreementDetail (product).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.AutomaticLinkingRequests">
            <summary>
            If this collection is populated, the system performs both linking and unlinking to all customer devices for the provided agreement detail. <p>Each link request creates a link (if it doesn't exist) or ignores the request (if it already exists). Each request also deletes any links that were not provided in the collection. </p>
            <p>For more information, see the LinkRequest class.</p>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.CustomerId">
            <summary>
            This field only needs to be populated in conjunction with the FetchAllAdressableDpADs flag. Setting the CustomerId and FetchAllAdressableDpADs = true allows you to fetch the customer's DpADs without performing any linking operation.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.DevicePerAgreementDetailId">
            <summary>
            ID of the DpAD. For details, see <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail" />.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.FetchAllAddressableDpADs">
            <summary>
            If true the method will also return all of the customers adressable DPADs. The SPADs will include sandbox modifications.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.Link">
            <summary>
            This flag indicates whether linking or unlinking should be performed. If True, then linking is performed. If False, then unlinking is performed.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.LinkReason">
            <summary>
            ID of the Link reason (event 111).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.Operation">
            <summary>
            Specifices the operation this method call should be performing.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.PortId">
            <summary>
            Port ID (used with VoIP devices).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.ReplaceScheduleId">
            <summary>
            When performing the CreateSchedule operation the system will replace an old ManageSoftware schedule.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.SandboxId">
            <summary>
            Sandbox record ID. For more information, see <see cref="T:PayMedia.ApplicationServices.SandBoxManager.ServiceContracts.DataContracts.Sandbox" />.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.ScheduleExecutionDate">
            <summary>
            When performing the CreateSchedule operation this field specifices the schedule exectiuon date.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.ScheduleId">
            <summary>
            When performing the LoadSchedule operation this field specifices the ManageSoftwareSchedule to load.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.UnlinkReason">
            <summary>
            ID of the Unlink reason (event 110).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailResult">
            <summary>
            This class represents the response to a request that attempts to link or unlink software and hardware.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailResult.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailResult.DevicePerAgreementDetail">
            <summary>
            The DpAD. For details, see <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail" />.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailResult.ExistingSoftwareLinkingSchedules">
            <summary>
            This contains a list of all future scheduled software changes for this customer.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailResult.LinkReason">
            <summary>
            ID of the Link reason (event 111).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailResult.LinksAvailable">
            <summary>
            The number of remaining links for the given product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailResult.SandboxId">
            <summary>
            The sandboxId of the current session.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailResult.ScheduleId">
            <summary>
            If the sandbox linking session is closed and scheduled this field will hold the the resulting scheduleId.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailResult.UnlinkReason">
            <summary>
            ID of the Unlink reason (event 110).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailResult.AllAddressableCustomerDpADs">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailResult.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx">
            <summary>
            A lightweight version of the OfferDefinition class. Improves response time because this class contains fewer properties than OfferDefinition. For details about the OfferDefinition class, see PayMedia.ApplicationServices.OfferManagement.ServiceContracts.DataContracts.OfferDefinition.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.ApplyToLevel">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.CurrentUserMayCapture">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.CurrentUserMayChangeEndDateOnCreate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.CurrentUserMayChangeEndDateOnUpdate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.CurrentUserMayDelete">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.Description">
            <summary>
            A brief description of the offer.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.GiveAutomaticallyAtCapture">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.IsApplyToLevelProduct">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.MayGiveManually">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.OfferDefinitionCategoryId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.OfferDefinitionCategoryName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.OfferDefinitionCategoryPriority">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.PriceAdjustmentType">
            <summary>
            this is supplied to Offers from outside caller
            -- This is mimicing OfferDefinitionPriceAdjustmentTypes
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.PriceAdjustmentValue">
            <summary>
            this is supplied to Offers from outside caller
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.PriceDescription">
            <summary>
            This string describes all of the possible discounts that an offer defintion contains.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.Priority">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.ProductAppliedTo">
            <summary>
            Product that receives the discount. An offer can be applied to either a product or a product combination--but not to both. If the ProductCombination has a value, do not pass a value in ProductAppliedTo.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.ProductCombination">
            <summary>
            Product combination that receives the discount. An offer can be applied to either a product or a product combination--but not to both. If the ProductAppliedTo has a value, do not pass a value in ProductCombination.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferDefinitionEx.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferValidationInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferValidationInfo.AgreementId">
            <summary>
            The agreement the failed offer definition belongs to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferValidationInfo.OfferDefinitionDescription">
            <summary>
            The description of the OfferDefinition against which validation occurs.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferValidationInfo.OfferDefinitionId">
            <summary>
            OfferDefinitionID
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferValidationInfo.ValidationMessage">
            <summary>
            Message returned during validation
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OfferValidationInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmation">
            <summary>
            An order confirmation represents a form that identifies all products and services the customer is purchasing, including any up-front charges (required pre-payments), recurring or pro-rated charges, discounts, taxes, work order service charges, and so on. <ul> <li>When you add products to an existing agreement using the UI, this form displays only the new charges.</li> <li>The detailed data related to the OrderConfirmation is stored in the XmlData property.</li> </ul> Note that the charges in the XmlData do not reflect the following: <ul> <li>Discounts that require particular product statuses, invoice statuses, or keywords. </li> <li>Administration fees, if any. (Administration fees are generated when invoice runs are performed). </li> </ul>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmation.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmation.AgreementId">
            <summary>
            The agreement associated with this order confirmation.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmation.ConfirmationNumber">
            <summary>
            An ICC-generated string that the CSR typically gives to the customer to confirm the purchase. <ul> <li>To generate a new ConfirmationNumber, call IAgreementManagementConfigurationService.GetOrderConfirmationNumber().</li> </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmation.ConfirmDate">
            <summary>
            The date and time the order was confirmed.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmation.CustomerId">
            <summary>
            The customer for whom this order confirmation was generated.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmation.Id">
            <summary>
            The unique identifier for this order confirmation.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmation.UserId">
            <summary>
            The user identifier of the person who created this order.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmation.XmlData">
            <summary>
            Raw XML used to store a serialized order confirmation entity. <ul> <li>For an example, see Sample_OrderConfirmation .xsd and .xml files in the IBSV6Help/SampleFiles folder.</li> </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmation.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmationHistory">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmationHistory.History">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmationHistory.OrderConfirmation">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmationHistory.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceInfo.PairedToDeviceId">
            <summary>
            The paired device Id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceInfo.PairedToDeviceSerialNumber">
            <summary>
            The paired device serial number.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceInfo.PairingId">
            <summary>
            The identifier of the pairing.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceModel">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceModel.AddressableDeviceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceModel.AddressableDeviceSerialNumber">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceModel.AddressableModelId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceModel.AddressableModelName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceModel.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceModel.NonAddressableDeviceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceModel.NonAddressableDeviceSerialNumber">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceModel.NonAddressableModelId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceModel.NonAddressableModelName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PairedDeviceModel.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct">
            <summary>
            This represents a device belonging to a customer. This object contains other devices for the customer that can be exchanged for this one.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.AgreementDetailId">
            <summary>
            The referenced AgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.CommercialProductId">
            <summary>
            The referenced commercial product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.CommercialProductName">
            <summary>
            The referenced commercial product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.DeviceId">
            <summary>
            The id of the referenced DevicePerAgreementDetail's device.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.DevicePerAgreementDetailId">
            <summary>
            The referenced DevicePerAgreementDetail
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.ModelId">
            <summary>
            The model Id of the referenced DevicePerAgreementDetail's device.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.ModelName">
            <summary>
            The model name of the referenced DevicePerAgreementDetail's device.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.PairedWithDeviceIds">
            <summary>
            A reference to all devices that this device is paired to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.SerialNumber">
            <summary>
            The serial number of the referenced DevicePerAgreementDetail's device.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.TechnicalProductId">
            <summary>
            The technical product Id of the referenced DevicePerAgreementDetail
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.TechnicalProductName">
            <summary>
            The technical product name of the referenced DevicePerAgreementDetail
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.UpdatedDeviceId">
            <summary>
            If the device has already been switched in the current sandbox session, this field will contain the new DeviceId for this record.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.PotentialSwapDevices">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PotentialSwapProduct.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote">
            <summary>
            A <i>prepayment</i> is a quoted amount that a customer must pay <b>before </b>you ship or activate his products. It is sometimes called a Wait for Payment quote. When a user creates a new agreement that requires prepayment, ICC generates the prepayment quote, and updates the agreement status to the configured wait-for-payment status. <br><b>Note:</b> This object applies to "Wait for Payment" agreements--not to voucher products or prepaid quotes for products.</br>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.AgreementId">
            <summary>
            The agreement id for the prepay quote.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.AgreementTypeId">
            <summary>
            The type of the agreement that this quote is for. This is a derived field.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.AmountOwed">
            <summary>
            The amount that the quote is for.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.AmountPaid">
            <summary>
            The amount of money that has been received for the prepayment quote.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.CancellationDate">
            <summary>
            The date on which the prepayment quote was cancelled
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.CreatedDate">
            <summary>
            The date that this quote was created.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.CustomerId">
            <summary>
            The customer that this prepay quote belongs to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.FinancialAccountId">
            <summary>
            The financial account used for payment purposes.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.InvoiceNumber">
            <summary>
            The invoice number ofthe prepayment quote.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.PaymentReceivedDate">
            <summary>
            The date that a payment for the quote was last received.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.Period">
            <summary>
            The amount if time (in months) that the payment is for.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.QuoteId">
            <summary>
            This links to an InvoiceQuote object.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.RequiredRemainingPaymentAmount">
            <summary>
            A calculated field that holds the minimum amount of money that must be paid in order to fulfill this prepayment quote.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.Status">
            <summary>
            The status of the quote.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PrepayQuote.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx">
            <summary>
            This class holds information about a PriceOverride.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.Amount">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.CreationReason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.EligibleForAdditionalDiscounts">
            <summary>
            If true, this price override will be eligible for additional discounts.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.EntityId">
            <summary>
            This is the identifier that this price override is collected to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.EntityType">
            <summary>
            The metadata type that denotes the type of entity this override applies to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.EventId">
            <summary>
            ICC system event ID. Applies only when Recurring is false.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.EventReasonId">
            <summary>
            The configured reason applicable to the ICC system event that triggers this override. Applies only when Recurring is false.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.ListPriceConditionId">
            <summary>
            ListPrice condition Id. This is the overridden list price. When using percentage or amount, this is the list price that gives the base amount.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.OverrideInvoiceText">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.OverrideLedgerAccountId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.OverrideType">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.ProductId">
            <summary>
            ProductId and ServiceId are mutually exclusive. This property represents a commercial product from the Product Catalog
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.SandboxId">
            <summary>
            If this value is above zero, this object is a temporary object in a sandbox.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PriceOverrideEx.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx">
            <summary>
            A lightweight version of the PricingInfo class. Used for improved performance because it has fewer properties than PricingInfo.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.AgreementDetailId">
            <summary>
            ID of the price's AgreementDetail. Used to make the pricing unique and to match up the pricing with the incoming criteria.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.Amount">
            <summary>
            Amount of the price, including applicable taxes.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.CsrText">
            <summary>
            Text regarding the price. This value is populated with user-configured CSR Text from the price's list price condition.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.CurrencyId">
            <summary>
            ID of the currency of the amount. Maps to BUSINESSDATA.CURRENCY.ID.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.DailyCost">
            <summary>
            Pre-paid products only. A calculated value that represents how much a pre-paid product costs the customer per day.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.EventId">
            <summary>
            Once-off charges only. The ICC system event that triggers the creation of a charge for the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.EventReasonId">
            <summary>
            Once-off charges only. The user-configured reason related to the ICC system event that triggers the creation of a charge for the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.InstallmentPlanText">
            <summary>
            Installment plans only. Text related to the price. Populated from the user-configured product installment plan description.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.InvoiceText">
            <summary>
            User-configured text for FTs that are created from this price.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.ListPriceAmount">
            <summary>
            Base amount of the list price, unaffected by adjustments.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.ListPriceConditionId">
            <summary>
            ID of the user-configured list price condition. The list price condition defines the conditions under which the price is applicable.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.ListPriceId">
            <summary>
            ID of the list price.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.MultiplyByNumberOfUnits">
            <summary>
            If True, the price is multiplied by the quantity of items ordered or quantity on a work order line.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.PricingChargeType">
            <summary>
            Represents the type of charge (once-off, recurring, or both). For details, see <see cref="T:PayMedia.ApplicationServices.Pricing.ServiceContracts.PricingChargeType"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.PricingForId">
            <summary>
            ID of the entity associated with the price. For example, if the PricingForType is Shipping, this value is the ID of the shipping order.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.PricingForType">
            <summary>
            Represents the entity associated with this price. For details, see <see cref="T:PayMedia.ApplicationServices.Pricing.ServiceContracts.PricingForType"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.ProductName">
            <summary>
            If the price is for a commercial or technical product, the name of the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.Prorate">
            <summary>
            If True, the price is prorated.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.ProratedAmount">
            <summary>
            The prorated amount. If the price is not prorated, this value is the same as the amount.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.ProrateFromDate">
            <summary>
            If the price is prorated, the start date of the proration.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.ProrateToDate">
            <summary>
            If the price is prorated, the end date of the proration.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.Quantity">
            <summary>
            Indicates the number of entities being priced.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.ServiceName">
            <summary>
            If the price is associated with a work order service, the name of the service.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.PricingInfoEx.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.AgreementDetailIds">
            <summary>
            The list of AgreementDetail IDs to perform this operation on.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.AllowFailedSpearForSchedule">
            <summary>
            If True, schedules are generated, even though the product did not pass its SPEAR check.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.IgnorePrepaidValidationLogic">
            <summary>
            This is an internal flag, if True, the system ignore FA account check ; if False, the system check the FA account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.PerformFundRemoval">
            <summary>
            This is primarily an internal flag. If True, the system withdraws all funds from a voucher or quote-based product when performing the 204 event. (This occurs only when the ProcessAgreementDetailSpear action is Execute or CheckExecute.)
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.ProcessAgreementDetailSpearAction">
            <summary>
            The action to perform for the given products. Values are Execute (0), Check (1, which validates the rules and does not make changes), and CheckExecute (2, which validates rules and performs the operation only on the products that pass validation).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.ReplaceScheduleId">
            <summary>
            The ID of the schedule to replace with a new scheduled change. This value is ignored if the ScheduleDate passed in is not a value in the future.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.ReportSecondaryCoExRuleFailure">
            <summary>
            If this field is true the system will report a CoEx failure on a non-impacted agreement / account even if RestrictCoexistenceFailureScope (ProductCatalogDefaults).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.SandboxId">
            <summary>
            If this value is above zero, this object is a temporary object in a sandbox.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.ScheduleCreatedDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.ScheduleDate">
            <summary>
            The date to schedule this operation for.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.ValidateProdComboForSchedule">
            <summary>
            Used to get warning messages for failed SPEAR rules. If True, configured business rules (such as Product Combinations and CaReDISC rules) are validated, and the returned object includes failure messages. To perform the operation (and ignore warning messages), set this value to False.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.WarningAsException">
            <summary>
            If True, the call generates an exception if the operation is not successful (instead of reporting the failure in the result set).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.LoadCriteria">
            <summary>
            Used by internal ICC processes. It is of type AgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.SpearEvent">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.FailureMessage">
            <summary>
            A description of why the operation was not sucessful.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.IgnoreUsingFlag">
            <summary>
            If the operation is blocked due to a warning this field contains the input paramter that must be set in order to ignore the warning.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.NewInvoicingProfileId">
            <summary>
            If the invoicing profile has been changed due to a product activation this field holds the new profile id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.OperationSuccessful">
            <summary>
            if true, the method completed sucessfully. If not true, the FailueMessage string will contain the error that was encountered.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.PriceForEvent1171FirstProductReconnected">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.PriceForEvent3171ReconnectionFee">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.ReasonForEvent1171FirstProductReconnected">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.ScheduleId">
            <summary>
            If the operation resulted in a schedule being generated, this field will contain the scheduleId of the created schedule.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.UpdatedOfferIds">
            <summary>
            A list of offers that have had their start date updated to today due to a product activation action.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.FailedAgreementDetails">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.SuccessfulAgreementDetails">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.AgreementDetailsForEvent1171Evaluation">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.AgreementDetailsForEvent3171Evaluation">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearResults.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCancelInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCancelInfo.AgreementDetailId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCancelInfo.CommercialProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCancelInfo.CommercialProductName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCancelInfo.ContractEndDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCancelInfo.ContractPeriodId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCancelInfo.ContractStartDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCancelInfo.FullPeriodCancelCost">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCancelInfo.ProratedCancelCost">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCancelInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureOfferInfo">
            <summary>
            Represents an offer that is applied during the Product Capture process.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureOfferInfo.AppliedOfferDefinitionId">
            <summary>
            The ID of the user-configured offer that you want to give the customer. This property is equivalent to BUSINESSDATA.OFFER_DEFINITION.ID.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureOfferInfo.OfferId">
            <summary>
            ID of the unique instance of the OfferDefinition. For more information about OfferDefinitions, see PayMedia.ApplicationServices.OfferManagement.ServiceContracts.DataContracts.OfferDefinition.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureOfferInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams">
            <summary>
            Represents that parameters that are used when capturing a new product, or when upgrading/downgrading an existing product (using the ManageProductCapture method).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.AgreementDetailIdsRemove">
            <summary>
            When upgrading or downgrading, this is the list of IDs of the products that are being replaced.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.AgreementId">
            <summary>
            The ID of the agreement to which the new product is linked.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.DeviceReturnToStockHandlerId">
            <summary>
            This param needs to be set only if the devices from the old product should be assigned back to a specified stock handler.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.DevicesOnHand">
            <summary>
            If this value is true, ASM will attempt to find distributor-owned devices at the customer's valid address, and will automatically link the devices to the DPADs that are created during the capture process.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.ExecutionDate">
            <summary>
            To schedule the Manage Product Capture for a future date, set the date in this param.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.IsCopyDataForServiceAddressChange">
            <summary>
            Used only for service address changes. <br>
            If True, existing market segment-related data is copied to the new product. For more information, see <see cref = "P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.IsValidateForServiceAddressChange" />.</br>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.IsValidateForServiceAddressChange">
            <summary>
            Used only with the Service Address Change process. <br>If True, the system validates products and offers in the OfferValidation process for a new service address. This validation happens only when a customer moves to a new service address. </br>
            <br>If "IsValidateForServiceAddressChange" is true, then "IsCopyDataForServiceAddressChange" should be false. </br>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.KeepSandboxOpenForSchedule">
            <summary>
            If True, the service will not close the sandbox after generating a schedule. This allows the user to make changes to the sandbox and record this information for delayed exection via a call to EnterpriseFacade.ProcessManageProductCaptureSchedule.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.MemberProductIds">
            <summary>
            When upgrading or downgrading, this is the list of IDs of the products that are selected as member products
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.OfferCreateReason">
            <summary>
            If the create offer reason is specified, it will be used instead of the capture reason configured on the offer definition.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.OfferDefinitions">
            <summary>
            This param is used for capturing non-product level offers. Note: Product-level offers are captured in the AgreementDetailWithOfferDefinitions param.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.OfferIdsRemove">
            <summary>
            Used to remove existing offers (typically used when performing an upgrade or downgrade).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.OriginalAgreementId">
            <summary>
            This value is populated only for ServiceAddressChange. It represents the ID of the Agreement associated with the original address.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.ReplaceScheduleId">
            <summary>
            Used to replace an existing schedule record with a new schedule record (for example, when you want to re-schedule the Manage Product Capture process).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.ReportSecondaryCoExRuleFailure">
            <summary>
            If this field is true the system will report a coexistence rule failure on a non-impacted agreement / account even if RestrictCoexistenceFailureScope (ProductCatalogDefaults).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.SandboxId">
            <summary>
            The ID of the sandbox used for this transaction.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.SkipShippingOrderGeneration">
            <summary>
            To prevent the system from generating shipping orders for this transaction, set this param to True.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.SkipWarnings">
            <summary>
            If True, the method will complete the operation, even if warnings are generated.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.SkipWorkOrderGeneration">
            <summary>
            To prevent the system from generating work orders for this transaction, set this param to True.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.SuppressTechnicalProductAndChannelInfo">
            <summary>
            When this flag is set to true, the technical product and channel informations won't be returned by GetManageFullProductDetail API
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.UseSharedBackgroundProcessor">
            <summary>
            If this flag is True, the system will generate a 2100 (BulkBillingAndFinance) background record instead of a 2000 (Billing) background record. The 2100 background record allows for sequential (in order) processing of billing, payment, and prepaid operations.
            <br><b>Note:</b> If you develop an application that can immediately fund products when you create, up/downgrade, or reconnect them, you must set this flag to TRUE. This flag makes billing and funding both use a special controller type, SharedBillingAndFinance (third-party billing and finance--2100) to ensure that the billing record is created before funding is attempted. </br><br>If this flag is not True, the billing and funding records use different controller types (2000 and 2100), which results in failures if funding is attempted (the 2100 record is processed) before the billing record is created (the 2000 record is processed). </br>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.AgreementDetailWithOfferDefinitions">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.CaptureReasons">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureReasons">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureReasons.CancelReason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureReasons.CreateReason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureReasons.ReconnectReason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureReasons.RetireReason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureReasons.SandboxId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureReasons.UpgradeDowngradeReason">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureReasons.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults">
            <summary>
            This class is used by the ManageProductCapture method. It is used to return the results of the "super creation" product capture process, as well as to let the user know when the supplied reasons were not adequate to complete the call.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.CancelReasonRequired">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.CapturedOfferIds">
            <summary>
            A list of offer Ids captured.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.CreatedPriceOverrides">
            <summary>
            A list of price overrides that were created from the capture process.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.CreateReasonRequired">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.IgnoreUsingFlag">
            <summary>
            If the operation is blocked due to a warning this field contains the input paramter that must be set in order to ignore the warning.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.MemberProducts">
            <summary>
            The optional member products for upgrade/downgrade
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.OperationSuccessful">
            <summary>
            If this value is false the operation did not complete successfully. This is true when the method is returning a warning or a reason is required for a cancel / reconnect / upgrade operation.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.ReconnectReasonRequired">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.ScheduleId">
            <summary>
            If a future execution date was specified, this field will hold the Id of the primary schedule recorded created.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.UpDowngradeReasonRequired">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.WarningMessage">
            <summary>
            Contains a warning message about possible errors that scheduling the operation could encounter.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.AgreementDetails">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureResults.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductReevaluationCriteria">
            <summary>
            Parameters for the ReevaluateProductsPricing method.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductReevaluationCriteria.AgreementDetailIds">
            <summary>
            A list of products to reevaluate.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductReevaluationCriteria.EffectiveDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductReevaluationCriteria.ReevaluateReason">
            <summary>
            The reason for the reevaluate operation.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductReevaluationCriteria.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductServiceInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductServiceInfo.CommercialProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductServiceInfo.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductServiceInfo.ProductPricingInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductServiceInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionCriteria">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionCriteria.CustomerId">
            <summary>
            Customer Id to whom the products belong
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionCriteria.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.AgreementDetailId">
            <summary>
            Product Idenfitifer.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.ChargedUntilDate">
            <summary>
            Applicable only to products that are charged on a recurring basis. The last date through which the ICC invoice run generated recurring charges for the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.ChargePeriod">
            <summary>
            The ChargePeriod of the Product
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.ClassId">
            <summary>
            ClassId Id to the customer belong.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.CountryId">
            <summary>
            Country Id to the customer belong.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.CustomerId">
            <summary>
            Customer Id to whom the product belong
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.IsBillable">
            <summary>
            The Is charge for agreement detail status.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.PrepaidManualDisconnectDate">
            <summary>
            Pre-paid products only. Date on which the pre-paid product is disconnected. Equals the Prepaid Disconnect Date extended by the Max Manual Grace Period. (PrepaidManualDisconnectDate= PrepaidDisconnectDate + MaxManualGracePeriod)
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.PreviousChargedUntilDate">
            <summary>
            The previous period through which the product has been invoiced.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.SegmentationId">
            <summary>
            Segmentation Id to the customer belong.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.TypeId">
            <summary>
            Type Id to the customer belong.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParam.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParams">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParams.DisconnectionParams">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParams.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnections">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnections.ProjectedProductDisconnections">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnections.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedProductDisconnection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedProductDisconnection.AgreementDetailId">
            <summary>
            Id of the associated product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedProductDisconnection.ProjectedDisconnectionDate">
            <summary>
            Date and time on which this product is projected to be disconnected taking all extensions and grace periods into consideration.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedProductDisconnection.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ReconnectAgreementDetailParams">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ReconnectAgreementDetailParams.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ReconnectAgreementDetailParams.FinancialAccountUpdateReasons">
            <summary>
            Reasons for updating financial account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ReconnectAgreementDetailParams.ScheduleDate">
            <summary>
            The date to schedule this operation for.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ReconnectAgreementDetailParams.ProcessAgreementDetailSpearParams">
            <summary>
            Parameters for processing agreement detail spear.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ReconnectAgreementDetailParams.FinancialAccount">
            <summary>
            Financial account
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ReconnectAgreementDetailParams.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.AgreementDetailId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.AgreementId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.AgreementType">
            <summary>
            The agreement type of the associated agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.ChargePeriod">
            <summary>
            This holds the Charge Period of Products with Charge Period Update Schedules
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.ContractEndDate">
            <summary>
            Contract end date from product or agreement. Used to do advance billing on scheduled up/downgrades
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.ContractSignatureDate">
            <summary>
            Contract signature date from products. Used to do advance billing on scheduled up/downgrades
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.ContractStartDate">
            <summary>
            Contract start date from product or agreement. Used to do advance billing on scheduled up/downgrades
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.CustomerId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.EffectiveDate">
            <summary>
            This is the Date the RECpAD is able to be considered by the billing engine.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.FinancialAccountId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.HistoryId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.Id">
            <summary>
            this is per Financial Account
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.IneffectiveDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.LedgerAccountId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.ListPriceConditionId">
            <summary>
            This can be derived from the ListPrice on the AgreementDetail
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.ListPriceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.ListPriceInvoiceText">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.Quantity">
            <summary>
            This holds the quantity that is present in the Agreeement Detail. This is needed when a scheduled quantity change happens and we bill for that change in advance.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.RECpADType">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.RECpADAdjustments">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpAD.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpADAdjustment">
            <summary>
            there is a 1:1 mapping between a RECpAD Adjustment and a PriceAdjustment (PriceOverride and Discount)
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpADAdjustment.AdjustmentForId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpADAdjustment.AdjustmentType">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpADAdjustment.Amount">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpADAdjustment.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpADAdjustment.InvoiceText">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpADAdjustment.LedgerAccountId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpADAdjustment.Quantity">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpADAdjustment.RECpADId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpADAdjustment.RequiresSeparateFT">
            <summary>
            If PricingAdjustmentType='PriceOverride' always set to 'True'
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.RECpADAdjustment.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduledProductCaptureParams">
            <summary>
            This class is used for scheduling the ManageProductProcess.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduledProductCaptureParams.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduledProductCaptureParams.CaptureParams">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduledProductCaptureParams.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleInformation">
            <summary>
            Holds the information about a link/unlink operation between a product and a DevicePerAgreementDetail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleInformation.EntityId">
            <summary>
            The entity id of the schedule.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleInformation.EntityType">
            <summary>
            The EntityType of the Schedule
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleInformation.ExecutionDate">
            <summary>
            The ExecutionDate of the schedule.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleInformation.ScheduleId">
            <summary>
            The id of the schedule.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleInformation.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleLinkingRequest">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleLinkingRequest.LoadScheduleId">
            <summary>
            If this field is set with a schedule id the linking infoormation related to that schedule will be executed in the provided sandbox. This allows the schedule information to be edited.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleLinkingRequest.ReplaceScheduleId">
            <summary>
            If this value is set an old linking schedule will be deleted after the new linking schedule is created.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleLinkingRequest.SandboxId">
            <summary>
            The id of the current sandbox that contains the linking indormation.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleLinkingRequest.ScheduleDate">
            <summary>
            The time to execute the schedule.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleLinkingRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleLinkingResult">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleLinkingResult.CurrentDpADs">
            <summary>
            If a link schedule is loaded into the sandbox for editing this collection will hold all of the customer's DpADs and schedule modified SpADs.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleLinkingResult.ScheduleId">
            <summary>
            The id of the schedule that was created.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleLinkingResult.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequest">
            <summary>
            This class is used to an update to agreement detail. If ReplacesScheduleId is populated it will delete the existing schedule and create a new one.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequest.AgreementDetail">
            <summary>
            AgreementDetail (product) to be updated.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequest.AgreementDetailUpdateReasons">
            <summary>
            AgreementDetail (product) to be updated.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequest.EffectiveDate">
            <summary>
            Date on which changes to the quantity values are (or were) effective. Used when scheduling a quantity change.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequest.ReplacesScheduleId">
            <summary>
            If ICC is scheduled to replace an existing schedule, this field contains the ID of the schedule record that will be replaced.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequests">
            <summary>
            This class is used to schedule updates to multiple agreement details (products).
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequests.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequests.AgreementDetailUpdateReasons">
            <summary>
            Reasons for AgreementDetail (product) to be updated.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequests.EffectiveDate">
            <summary>
            Date on which changes to the quantity values are (or were) effective. Used when scheduling a quantity change.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequests.ReplacesScheduleId">
            <summary>
            If ICC is scheduled to replace an existing schedule, this field contains the ID of the schedule record that will be replaced.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequests.SandboxId">
            <summary>
            Set this field to create the schedule in a sandbox.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequests.AgreementDetails">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequests.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailResult">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailResult.ScheduleId">
            <summary>
            The id of the schedule that was created.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailResult.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailResults">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailResults.ScheduleId">
            <summary>
            The id of the schedule that was created.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailResults.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleValidationInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleValidationInfo.ExecutionDate">
            <summary>
            The schedule execution date.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleValidationInfo.FailureMessage">
            <summary>
            The error that prevents this schedule for executing.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleValidationInfo.ScheduleDescription">
            <summary>
            The schedule header descritpion.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleValidationInfo.ScheduleId">
            <summary>
            Ths id of the schedule.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleValidationInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SelectModelEntity">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SelectModelEntity.AllowedModelIds">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SelectModelEntity.CommercialProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SelectModelEntity.OfferDefinitionIds">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SelectModelEntity.TechnicalProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SelectModelEntity.DevicePerAgreementDetails">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SelectModelEntity.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ServiceAddressChangeParameters">
            <summary>
            The parameter could be customer's existing agreementId and new service address Id or new agreementId
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ServiceAddressChangeParameters.currentAgreementId">
            <summary>
            currentAgreementId and newServiceAddressId works together for validating customer's existing products in new address or only provide newAgreementId to validate customer's existing products in new address
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ServiceAddressChangeParameters.newAgreementId">
            <summary>
            currentAgreementId and newServiceAddressId works together for validating customer's existing products in new address or only provide newAgreementId to validate customer's existing products in new address
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ServiceAddressChangeParameters.newServiceAddressId">
            <summary>
            currentAgreementId and newServiceAddressId works together for validating customer's existing products in new address or only provide newAgreementId to validate customer's existing products in new address
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ServiceAddressChangeParameters.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SetAgreementDetailMetadataRequest">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SetAgreementDetailMetadataRequest.AllowQuantityDisconnectHoldOverride">
            <summary>
            A product that has its disconnection extension set to "QuantityUpdate" can not be set to any other value except "None" unless this flag is set to true.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SetAgreementDetailMetadataRequest.RemoveGraceDays">
            <summary>
            If this is true all products will have their manual disconnect date removed if the manual disconnect date is in the future.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SetAgreementDetailMetadataRequest.ProductMetadata">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SetAgreementDetailMetadataRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SetAgreementDetailMetadataResponse">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SetAgreementDetailMetadataResponse.ProductMetadata">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SetAgreementDetailMetadataResponse.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkAction">
            <summary>
            Holds the information about a link/unlink operation between a product and a DevicePerAgreementDetail.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkAction.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkAction.AgreementDetailId">
            <summary>
            The software product id .
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkAction.DevicePerAgreementDetailId">
            <summary>
            DpAD ID. For details, see <see cref="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail"/>.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkAction.LinkEvent">
            <summary>
            Either 110 (Unlink event) or 111 (Link Event)
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkAction.LinkReason">
            <summary>
            The reason for the linking event.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkAction.PortId">
            <summary>
            Port ID (used with VoIP devices).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkAction.ReferenceId">
            <summary>
            Holds the id of any related entity to this record.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkAction.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.HardwareDeviceId">
            <summary>
            The DeviceId.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.HardwareDeviceSerialNumber">
            <summary>
            The device serial number.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.HardwareDpadId">
            <summary>
            The id of the DpAD.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.HardwareModelDescription">
            <summary>
            The hardware model.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.HardwareModelId">
            <summary>
            The hardware model id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.HardwareProductId">
            <summary>
            The id of the hardware product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.HardwareProductName">
            <summary>
            The name of the hardware commercial product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.SoftwareProductId">
            <summary>
            The id of the software product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.SoftwareProductName">
            <summary>
            The software commercial product name.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.SoftwareTechnicalProductId">
            <summary>
            The id of the software technical product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.SoftwareTechnicalProductName">
            <summary>
            The name of the software technical product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwareLinkInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail">
            <summary>
            An SPAD (software per agreement detail) is a record in the ICC database that identifies the <i>addressable technical products</i> (for example, smartcards and modems) linked to a customer's software product. <ul> <li>If the software can be linked to more than one addressable device, ICC creates a separate SPAD record for each combination of software technical product and addressable technical product.</li> </ul>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail.AgreementDetailId">
            <summary>
            This refers to an Agreement Detail that has software or is a software-only product. All software is assigned to devices at the commercial product level. (An AgreementDetail is a commercial product that is linked to a customer via his agreement.)
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail.CanWatch">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail.DevicePerAgreementDetailId">
            <summary>
            Device (hardware) that is linked to this software.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail.DisplayProduct">
            <summary>
            This is the DisplayProduct flag from the linked AgreementDetail status object.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail.PortId">
            <summary>
            This is field for VoIP device to indicate port information.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail.SandboxId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail.SandboxSkipValidation">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail.TechnicalProductId">
            <summary>
            This is the software product linked to the device.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetailHistory">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetailHistory.History">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetailHistory.SoftwarePerAgreementDetail">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetailHistory.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductParams">
            <summary>
            Contains the information needed to perform a product suspention.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductParams.AgreementDetailIds">
            <summary>
            The Id list of agreement details to be suspended.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductParams.EndDate">
            <summary>
            The date the product suspention should end.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductParams.EndSuspensionReason">
            <summary>
            The reason for the end suspention event.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductParams.FetchInformationForScheduleId">
            <summary>
            Given a ScheduleId or the suspend or wakeup schedule the system will return the dates and Ids of both the suspend and wakeup schedule.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductParams.ReplaceScheduleId">
            <summary>
            The Id of an existing schedule sleep / wakeup. These schedules will be deleted and a new schedule created.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductParams.StartDate">
            <summary>
            The date the product suspention should start.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductParams.SuspendIndefinitely">
            <summary>
            If true, the product is suspended indefinitely. The product is never reconnected automatically. The product may be reconnected manually (for example, by a CSR).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductParams.SuspendReason">
            <summary>
            The reason for the suspention event.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductParams.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductResults">
            <summary>
            Contains information about a sucessful product suspension operation.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductResults.EndProductSuspensionDate">
            <summary>
            The date the product suspension will take end.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductResults.EndProductSuspensionScheduleId">
            <summary>
            The Id of the schedule generated to wakeup the suspended products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductResults.IsSuspendedIndefinitely">
            <summary>
            Is the product suspended indefinitely? If so, the product may only be reconnected manually (for example, by a CSR).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductResults.SuspendProductDate">
            <summary>
            The date the product suspension will take place.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductResults.SuspendProductScheduleId">
            <summary>
            The Id of the schedule generated to suspend the products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductResults.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceBySpearParameters">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceBySpearParameters.DevicePerAgreementDetailId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceBySpearParameters.EffectiveDate">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceBySpearParameters.NewDeviceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceBySpearParameters.NewDeviceSwapReasonId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceBySpearParameters.OldDeviceId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceBySpearParameters.OldDeviceSwapReasonId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceBySpearParameters.ReturnToStockHandlerId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceBySpearParameters.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.CopyDeviceReferenceNumber">
            <summary>
            If true, the reference number from the old device will be copied.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.DevicePerAgreementDetailId">
            <summary>
            <b>Required.</b> The Dpad ID of the device the customer wants to exchange. <ul> <li><i>Note</i>: This is the <u>DpadId</u>, not the DeviceId.</li> <li>For more information on Dpad, see <i>DevicePerAgreementDetail class</i>.</li> </ul>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.EffectiveDate">
            <summary>
            Leave as null to perform the swap immediately. Or enter a future date to schedule the swap.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.ImmediateSwapOldReason">
            <summary>
            The reason to use for the 146 event applied to the old device. Will use the default reason if null is provided.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.ImmediateSwapReason">
            <summary>
            The reason to use for the 155 event applied to the new device. Will use the default reason if null is provided.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.IsReceiveExchangeDevice">
            <summary>
            If the swop on DPAD is triggered when customer returns old or new device back, both old device and new device's status' are to be updated without using events 146(SwopImmediateOld) and 155(SwopImmediateNew)
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.IsSwopOrder">
            <summary>
            If true, the devices' statuses are updated by Model Swap rules (Configuration &gt; Product Catalog &gt; Models &gt; Model Swaps).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.NewDeviceId">
            <summary>
            <b>Required. </b>The Id of the new device.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.NewTechnicalProductId">
            <summary>
            The new technical product the dpad should point to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.OverrideEventId">
            <summary>
            If this value is not null, then the normal event [DeviceImmediateSwopNew = 155] performed on the new device will be replaced by the provided event.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.OverrideEventReason">
            <summary>
            This is used as the reason for the override event ID. This field is not used if an override event is not provided.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.ReturnToStockHandlerId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.RuleGroupId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.SkipRuleValidation">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.SwapRuleId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem">
            <summary>
            Represents a voucher that is being redeemed to pay for a product's services. Holds the information necessary to perform the Top Up event (ICC system event 105) on a single product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.AgreementDetailId">
            <summary>
            The product ID to perform the top up on.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.CommercialProductName">
            <summary>
            The name of the commercial product, derived from the AgreementDetailId.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.CreditAmount">
            <summary>
            The amount of money to be credited to this product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.CurrencyId">
            <summary>
            The currency of the payment. This is derived from the LedgerAccount.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.CurrencyName">
            <summary>
            The name of the currency for the amount defined.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.DisplayAsErrorMessage">
            <summary>
            If this field is set to True on the PSM GUI, the text message returned will be displayed in Red; otherwise, it is displayed in Black.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.LedgerAccountId">
            <summary>
            The ledger account to post the funds to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.LedgerAccountName">
            <summary>
            The name of the ledger account the funds will be posted to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.NumberOfDays">
            <summary>
            This will be the amount of time in days that the top up amount will extend the charged-until date for the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.ProductStatusId">
            <summary>
            ID number of the product's status.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.ProductStatusName">
            <summary>
            Status of the commercial product .
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.ScheduleId">
            <summary>
            If the top up action is scheduled, this field contains the ID of the schedule record generated for the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.ServiceDisconnectionDate">
            <summary>
            This is the date that the product will be disconnected.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.ValidationMessage">
            <summary>
            This holds any messages from the 3rd-party validation system.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.VoucherDate">
            <summary>
            The date of the voucher. This value is used when evaluating how far to extend the product's CUD (charged-until date).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.VoucherNumber">
            <summary>
            The 3rd-party voucher number associated with this voucher.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.VoucherMultiRoomFTs">
            <summary>
            Stores information needed to generate financial transactions when there are multiple list prices for one voucher product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpItem.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpParams">
            <summary>
            Contains the necessary parameters to perform the Top Up event (ICC system event 105) on one or more products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpParams.AutomaticRedistributionForAccountId">
            <summary>
            Set this value to a financial account ID, to instruct the system to redistribute the current balace of the account to all products that allow automatic fund redistribution.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpParams.AutomaticRedistributionReason">
            <summary>
            The reason for ICC system event 104 (Auto Redistribute Credit Across Pre-paid Products) that will be written for each product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpParams.ParentScheduleId">
            <summary>
            The Top Up process can be attached to an upgrade or a downgrade schedule record. To schedule the top up to occur after the scheduled upgrade or downgrade, assign the scheduleId to this property.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpParams.TopUpReason">
            <summary>
            The reason for ICC system event 105 (Apply Voucher Payment to Product) that will be written for each product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpParams.ValidationOnly">
            <summary>
            If True, only validation is performed.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpParams.TopUpItems">
            <summary>
            A collection of TopUpItems. A TopUpItem represents a voucher that is being redeemed.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpParams.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpResults">
            <summary>
            Contains the results of performing a top up action.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpResults.FailedTopUps">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpResults.SuccessfulTopUps">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpResults.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedDeviceInfo">
            <summary>
            A result.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedDeviceInfo.DeviceId">
            <summary>
            The device identifier.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedDeviceInfo.HardwareModelDescription">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedDeviceInfo.HardwareModelId">
            <summary>
            The hardware model identifier.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedDeviceInfo.PairedToDevices">
            <summary>
            A list of devices that are paired to this device.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedDeviceInfo.SerialNumber">
            <summary>
            The device serial number.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedDeviceInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedProductInfo">
            <summary>
            A result.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedProductInfo.CommercialProductId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedProductInfo.CommercialProductName">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedProductInfo.OldAgreementId">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedProductInfo.ProductId">
            <summary>
            The product identifier.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedProductInfo.TransferedDeviceInfos">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedProductInfo.TransferType">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferedProductInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsRequest">
            <summary>
            This class is used to transfer hardware produucts to new agreements.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsRequest.NewAgreementId">
            <summary>
            The new agreement identifier that all products will be transfered to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsRequest.ProductIds">
            <summary>
            A list of products to move to the new agreement. All products must belong to the same financial account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsRequest.Save">
            <summary>
            If true the move operation will be saved, otherwise the operation will be simulated.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsRequest.TransferReason">
            <summary>
            The reason for the product transfer.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsRequest.ValidateSchedules">
            <summary>
            If true the system will simulate all existing schedules to see if any schedules fail after the simulated move. Note that this simulation will greeatly increase datbase utilization of this call.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult">
            <summary>
            A result.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult.FailedOffers">
            <summary>
            A list of offers that are invalid after the hardware move. Offers will only be validated on agreements that are involved in the move.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult.FailedSchedules">
            <summary>
            A list of schedules that fail validation after the move. This collection is always empty unless the caller explicitly asks for schedule simulation.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult.FailureMessage">
            <summary>
            A description of why the operation was not sucessful.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult.OperationSuccessful">
            <summary>
            if true, the completed sucessfully. If not true, the FailueMessage string will contain the error would prevent the operation from succeeding.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult.RemovedDeviceRelationships">
            <summary>
            A list of DeviceRelationships that have (or will be) removed because only part of the relationship is being transfered to a new agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult.RemovedWarrantyProducts">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult.RetainedWarrantyProducts">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult.SoftwareLinkingInfo">
            <summary>
            Contains information per agreement about the software that was linked and unlinked.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult.TransferedDeviceRelationships">
            <summary>
            A list of device relationships that have been (or will be) recreated on the new agreement.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult.TransferedProducts">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsResult.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnitOfMeasurement">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnitOfMeasurement.ENTITY_ID">
            <summary>
            Entity Id as defined by entity metadata.
            Used to identify this entity in history, financial transactions etc.
            This member is not avalable in the wsdl.
            </summary>     
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnitOfMeasurement.Active">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnitOfMeasurement.Description">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnitOfMeasurement.Id">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnitOfMeasurement.Name">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnitOfMeasurement.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedHardwareProduct">
            <summary>
            This object hold information about an agreement detail that has unlinked hardware products. It contains a few of the id's from the agreement detail and a list of technical product id's that have not been linked.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedHardwareProduct.AgreementDetailId">
            <summary>
            The agreement detail in question.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedHardwareProduct.AgreementId">
            <summary>
            The agreement in question.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedHardwareProduct.CommercialProductId">
            <summary>
            The commercial product connected to the agreement detail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedHardwareProduct.CustomerId">
            <summary>
            The customer's Id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedHardwareProduct.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedProductsRequest">
            <summary>
            The object holds a list of agreement detail id's and the sandbox id to which they below to evaluate unlinked products
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedProductsRequest.AgreementDetailIds">
            <summary>
            Array of Agreement Detail Id's for evaluation of unlinked products
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedProductsRequest.SandboxId">
            <summary>
            Sandbox Id of the agreement details
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedProductsRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedProductsResponse">
            <summary>
            This object holds the result of GetUnlinkedProducts API
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedProductsResponse.UnlinkedSoftwareProductCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedProductsResponse.UnlinkedHardwareProductCollection">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedProductsResponse.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedSoftwareProduct">
            <summary>
            This object hold information about an agreement detail that has unlinked software products. It contains a few of the id's from the agreement detail and a list of technical product id's that have not been linked.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedSoftwareProduct.AgreementDetailId">
            <summary>
            The agreement detail in question.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedSoftwareProduct.AgreementId">
            <summary>
            The agreement in question.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedSoftwareProduct.CommercialProductId">
            <summary>
            The commercial product connected to the agreement detail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedSoftwareProduct.CustomerId">
            <summary>
            The customer's Id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedSoftwareProduct.HasRequiredDeviceLink">
            <summary>
            If this flag is true, the referenced commercial product has required device-level links.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedSoftwareProduct.HasValidLink">
            <summary>
            If this value is true then there exists at least one device that the software can run on. If this is false then this unlinked software has no valid links.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedSoftwareProduct.TechnicalProductIds">
            <summary>
            A list of software technical product ids that have not been assigned to any hardware.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedSoftwareProduct.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdatedProductInfo">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdatedProductInfo.ActualEndDate">
            <summary>
            The actual end date that was saved. If null the product's end date was not updated.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdatedProductInfo.Product">
            <summary>
            The Product that was updated
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdatedProductInfo.RequestedEndDate">
            <summary>
            The Manual Disconnect Date that was requested.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdatedProductInfo.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest.AgreementDetailIds">
            <summary>
            Products to extend. This only applies to Products with a disconnection setting of type Voucher. Instead of specifying individual agreement detail ids we could specify a financial account id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest.DaysToAdd">
            <summary>
            The new manual disconnect date will be ChargeUntilDate+This value. The number of days allowed is subject to the Prepaid manual grace period extension rules.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest.FinancialAccountId">
            <summary>
            Optional if used do not use AgreementDetailIds. Updates all QuoteBased products on the Account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest.OverridePrepaidManualDisconnectDate">
            <summary>
            If specified, use this date as an override for PrepaidManualDisconnectDate
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest.QuoteId">
            <summary>
            The id of an QuoteBasedBilling quote. All of the products referenced by the quote will have thier end date extended and may change status based on the SPEAR configuration.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest.ReasonId">
            <summary>
            Reason for event 203
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest.SkipCalendarCheck">
            <summary>
            If this value is true the prepaid end date will NOT be checked for a conflicting calender event.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest.SystemCalculatedDisconnectDateForEvent">
            <summary>
            If set, the system calculates the grace days using the Prepaid Quote Extension Rules.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateResult">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateResult.IgnoredProducts">
            <summary>
            Certain products are ineligible to receive grace days. This contains all products that were skipped.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateResult.UpdatedProducts">
            <summary>
            Products to extend. This only applies to Products with a disconnection setting of type Voucher. Instead of specifying individual agreement detail ids we could specify a financial account id.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateResult.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer">
            <summary>
            Represents the information to transfer funds from a financial account to a voucher product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.AgreementDetailId">
            <summary>
            The product id to perform the funds transfer on.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.Comment">
            <summary>
            A comment that will be on the posted debit financial transaction.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.CommercialProductName">
            <summary>
            The name of the commercial product, derived from the AgreementDetailId.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.CreatedFinancialTransactionId">
            <summary>
            The id of the financial transaction created when the funds are transfered.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.CreditAmount">
            <summary>
            The amount of money to be credited to this product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.CurrencyId">
            <summary>
            The currency of the payment. This is derived from the LedgerAccount.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.CurrencyName">
            <summary>
            The name of the currency for the amount defined.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.LedgerAccountId">
            <summary>
            The ledger account to post the debit to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.LedgerAccountName">
            <summary>
            The name of the ledger account the transfer will be posted to.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.ListPriceConditionId">
            <summary>
            The ListPriceCondition that the transfer will be associated with.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.NumberOfDays">
            <summary>
            This will be the amount of time in days the top up will extend the charged-until date for the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.ProductStatusId">
            <summary>
            Id number of the product status value
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.ProductStatusName">
            <summary>
            The status name of the agreement detail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.ServiceDisconnectionDate">
            <summary>
            This is the date that the product will be disconnected.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.VoucherMultiRoomFTs">
            <summary>
            Stores information needed to generate financial transactions when there are multiple list prices for one voucher product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransfer.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferParams">
            <summary>
            Contains the necessary parameters to transfer funds from a financial account to one or more products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferParams.AutomaticRedistributionReason">
            <summary>
            The reason to use for the 104 event written for an automatic transfer.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferParams.FetchInformationOnly">
            <summary>
            If this value is set no FTs will be created, but the return collection will have the NumberOfDays and ServiceDisconnectionDate filled out based on the provided transfer amount.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferParams.FinancialAccountId">
            <summary>
            The id of the account to transfer funds from.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferParams.FundsTransferReason">
            <summary>
            The reason for transfering funds.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferParams.PerformAutomaticRedistribution">
            <summary>
            Instruct the system to automaticlly redistribute all funds on the financial account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferParams.VoucherFundsTransfers">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferParams.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferResults">
            <summary>
            Holds result information after performing a funds transfer from a financial account to prepaid voucher products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferResults.SuccessfulTransfers">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferResults.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherMultiRoomFT">
            <summary>
            Stores information needed to generate financial transactions when there are multiple list prices for one voucher product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherMultiRoomFT.CreditAmount">
            <summary>
            Price amount of the FT that would be generated from this list price.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherMultiRoomFT.InvoiceLineText">
            <summary>
            List price condition invoice line text.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherMultiRoomFT.LedgerAccountId">
            <summary>
            Ledger account associated with the price for this voucher.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherMultiRoomFT.ListPriceAmount">
            <summary>
            List price amount for exactly the number of days specified in the list price condition.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherMultiRoomFT.ListPriceConditionId">
            <summary>
            List price condition id for the voucher product desired based on the number of units and quantities defined.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherMultiRoomFT.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsParams">
            <summary>
            Contains information on how to withdraw funds from voucher or quote based products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsParams.AmountToWithdrawFromAccount">
            <summary>
            The amount of money to withdrawl from the financial account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsParams.Comment">
            <summary>
            A comment to be added to any reversal FTs generated from the withdrawl.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsParams.FetchInformationOnly">
            <summary>
            If this flag is true this method will only return information about the requested operation, no actual funds will be transfered.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsParams.FinancialAccountId">
            <summary>
            The financial account to withdrawl funds from.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsParams.ReversalStartDate">
            <summary>
            This sets the minimum reversal start date. This is the earliest date that funds can be withdrawn to. If this value is not set, it defaults to today's date.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsParams.SimulatedWithdrawalAmount">
            <summary>
            If this value is populated the system will attempt to find an optimal way to remove the specified amount of funds from the financial account and voucher products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsParams.WithdrawalProducts">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsParams.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct">
            <summary>
            This item represents a quote based or voucher based prepaid product and contains the needed information to withdrawl funds from the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.AgreementDetailId">
            <summary>
            The product id to perform the funds transfer on.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.AmountToWithdraw">
            <summary>
            The amount of funds to withdraw from this product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.CommercialProductName">
            <summary>
            The name of the commercial product, derived from the AgreementDetailId.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.CurrencyId">
            <summary>
            The currency of the payment. This is derived from the LedgerAccount.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.CurrencyName">
            <summary>
            The name of the currency for the amount defined.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.CurrentDisconnectDate">
            <summary>
            The current disconnect date of the product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.ErrorMessage">
            <summary>
            Returns any error information about removing funds from this product.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.MaxWithdrawalAmount">
            <summary>
            The maximum amount of funds that can be withdrawn from this product. Withdrawling this amount will cause the product to be disconnected as it will no longer have any remaining funds.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.NewDisconnectDate">
            <summary>
            The new disconnect date of the product after funds have been withdrawn.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.ProductStatusId">
            <summary>
            Id number of the product status value
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.ProductStatusName">
            <summary>
            The status name of the agreement detail.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.ReverseStartDate">
            <summary>
            This sets the minimum reversal start date. This is the earliest date that funds can be withdrawn to. If this value is not set it, defaults to the ReversalStartDate specified on the WithdrawFundsParam object (which defaults to today's date if not specified).
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsProduct.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsResults">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsResults.AccountBalance">
            <summary>
            The current balance on the financial account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsResults.AmountWithdrawnFromAccount">
            <summary>
            Contains the amount of money withdrawn from the financial account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsResults.ErrorMessage">
            <summary>
            Contains information about any exceptions encountered during the withdrawl operation.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsResults.MaxWithdrawalAmount">
            <summary>
            This is the maximum amount of money that can be withdrawn from this financial account and all of its products.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsResults.TotalAmountWithdrawn">
            <summary>
            Contains the total amount of funds withdrawn from products and the financial account.
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsResults.WithdrawalProducts">
            <summary>
            </summary>
        </member>
        <member name="P:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsResults.Extended">
            <summary>
            This member is added automatically to every data contract
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DisconnectionDateSettings">
            <summary>
            Defines the methodologies for disconnecting products.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DisconnectionDateSettings.QuoteBased">
            <summary>
            Quote-based products have fixed amounts of time added to them (based on the product's charge period) and use the standard method of pricing. The product is disconnected when the product consumes all of its funds.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DisconnectionDateSettings.AccountBased">
            <summary>
            The disconnection of the product is dependent on account settings. Wallet accounts (also known as pre-paid) disconnect the product when the account end date is reached. Products belonging to non-pre-paid accounts are disconnected via the arrears process.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DisconnectionDateSettings.VoucherPrice">
            <summary>
            A voucher-price product uses the amount of money allocated to the product to generate a disconnect date.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DisconnectionDateSettings.UseDefaultProductDisconnectionSettingOnCreate">
            <summary>
            This value is only valid when creating a new product. The System automatically looks up the configured default DisconnectionSetting for the product and uses that value for DisconnectionSetting. If no default value is configured, DisconnectionSetting is set to AccountBased.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.EventOccursTypes">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.EventOccursTypes.Now">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.EventOccursTypes.FixedFutureDate">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.EventOccursTypes.ContractEndDate">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.EventOccursTypes.ADStartDate">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.EventOccursTypes.GenericDateFormula">
            <summary>
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.FindAgreementSequenceInstanceEntityTypes">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.FindAgreementSequenceInstanceEntityTypes.Agreement">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.FindAgreementSequenceInstanceEntityTypes.AgreementDetail">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.FindAgreementSequenceInstanceEntityTypes.WorkOrder">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.FindAgreementSequenceInstanceEntityTypes.ShippingOrder">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.FindAgreementSequenceInstanceEntityTypes.PrepayQuote">
            <summary>
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.GetDaysRemainingOnQuoteBaseProductsResultTypes">
            <summary>
            Enumerates the from PauseAndPlayRemainingResult:
            <ul>
            <li>Success</li>
            <li>ErrorNoFTA</li>
            <li>ErrorSuspensionNotFound</li>
            </ul>
            See enumerators for details.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.GetDaysRemainingOnQuoteBaseProductsResultTypes.Success">
            <summary>
            Call return no errors
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.GetDaysRemainingOnQuoteBaseProductsResultTypes.Error">
            <summary>
            Call returned an Error, Check error string return for more details.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.GraceDaysForEvents">
            <summary>
            Defines the events that can be used to calculate Grace Days
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.GraceDaysForEvents.Unspecified">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.GraceDaysForEvents.ProductSubstitution">
            <summary>
            Upgrade or downgrade of a product.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService">
            <summary>
            Provides methods for the configuration of <b>agreements, agreement sequences</b>, and <b>agreement details</b> (products), such as: <ul> <li>Agreement detail SPEAR rules and rule groups.</li> <li>Agreement detail statuses.</li> <li>Agreement types.</li> <li>Contract periods.</li> <li>Contract renewal conditions.</li> <li>Units of measurement.</li> </ul>
            </summary>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CheckAgreementLimitation(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CheckAgreementLimitationRequest)">
            <summary>
            Check if can create agreement according to number limitation.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateAgreementDetailSpearEvent(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent)">
            <summary>
            Creates a new AgreementDetailSp+earEvent in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateAgreementDetailSpearRuleGroup(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearRuleGroup)">
            <summary>
            Creates a new AgreementDetailSpearRuleGroup in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateAgreementDetailStatus(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus)">
            <summary>
            Creates a new AgreementDetailStatus in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateAgreementLimitation(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation)">
            <summary>
            Create agreement limitation
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateAgreementSequence(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence)">
            <summary>
            Creates a new AgreementSequence in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateAgreementSequenceStatus(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStatus)">
            <summary>
            Creates a new AgreementSequenceStatus in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateAgreementSequenceStep(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep)">
            <summary>
            Creates a new AgreementSequenceStep in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateAgreementSpear(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSpear)">
            <summary>
            Creates a new AgreementSpear in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateAgreementStatus(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus)">
            <summary>
            Creates a new AgreementStatus in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateAgreementType(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType)">
            <summary>
            Creates a new AgreementType in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateCaReDiscDefaultDate(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate)">
            <summary>
            Creates a new CreateCaReDiscDefaultDate in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateContractPeriod(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ContractPeriod)">
            <summary>
            Creates a new ContractPeriod in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.CreateUnitOfMeasurement(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnitOfMeasurement)">
            <summary>
            Creates a new UnitOfMeasurement in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.DeleteAgreementLimitation(System.Int32)">
            <summary>
            Delete agreement limitation record.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.DeleteAgreementSpear(System.Int32)">
            <summary>
            Deletes the AgreementSpear associated with the provided id.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.FindAgreementSequences(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequencesCriteria,System.Int32)">
            <summary>
            This method returns the collection of Agreement Sequences based upon provided criteria see the behavior diagram for additional information. The criteria are serviceTypes[] and a userRoles[]. All specified ServiceTypes are required for the condition to be true (Ex CableInstallation, TelephonySetup). UserRoles can be any of the values specified (CSR or SalesRepresentative). If more than one Agreement is returned based upon the supplied criteria select the latest (highest AgreementSequenceId).
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementDetailSpearEvent(System.Int32)">
            <summary>
            Returns the AgreementDetailSpearEvent associated with the provided agreementDetailSpearId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementDetailSpearEvents(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the AgreementDetailSpearEvents associated with the provided eventId and reason.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.CollectionOperationFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementDetailSpearRuleGroup(System.Int32)">
            <summary>
            Returns the AgreementDetailSpearRuleGroup associated with the provided agreementDetailSpearRuleGroupId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementDetailSpearRuleGroups(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            This method is overloaded. Its alias is <b>RequestAgreementDetailSpearRuleGroups</b>.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementDetailSpearRuleGroups(System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementDetailStatus(System.Int32)">
            <summary>
            Returns the AgreementDetailStatus associated with the provided id.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementDetailStatuses(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            Returns all AgreementDetailStatuses in the system. This method is overloaded. Its alias is <b>RequestAgreementDetailStatuses</b>.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementDetailStatuses(System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementLimitation(System.Int32)">
            <summary>
            Get agreement limitation by id.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementLimitations(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            Get agreement limitations by query request criteria.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementSequence(System.Int32)">
            <summary>
            Returns a specific Agreement Sequence Object.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementSequences(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            This method is overloaded. Its alias is <b>RequestAgreementSequences</b>.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementSequences(System.Int32)">
            <summary>
            Returns a collection of Agreement Sequences.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementSequenceStatuses(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            Returns all AgreementSequenceStatuses in the system. This method is overloaded. Its alias is <b>RequestAgreementSequenceStatuses</b>.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementSequenceStatuses(System.Int32)">
            <summary>
            ###Note###
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementSequenceStep(System.Int32)">
            <summary>
            Returns the AgreementSequenceStep associated with the provided id.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementSequenceSteps(System.Int32,System.Int32)">
            <summary>
            Returns the AgreementSequenceSteps associated with the provided agreementSequenceId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementSpear(System.Int32)">
            <summary>
            Returns the AgreementSpear associated with the provided agreementSpearId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.CollectionOperationFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementSpears(System.Int32,PayMedia.ApplicationServices.SharedContracts.CriteriaCollection,System.Int32)">
            <summary>
            Returns the AgreementSpears associated with the provided eventId and filter.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementStatus(System.Int32)">
            <summary>
            Returns the AgreementStatus associated with the provided id.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementStatuses(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            This method is overloaded. Its alias is <b>RequestAgreementStatuses</b>.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementStatuses(System.Int32)">
            <summary>
            Returns all AgreementStatuses in the system.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementType(System.Int32)">
            <summary>
            Returns the AgreementType associated with the provided id.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementTypeRuleSetForCurrentUser(System.Int32)">
            <summary>
            Returns a specific set of Agreement Type Rules for the current user and a given agreementTypeId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementTypeRuleSetForUser(System.Int32,System.Int32)">
            <summary>
            Returns a specific set of Agreement Type Rules for a given user and agreementTypeId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementTypes(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            This method is overloaded. Its alias is <b>RequestAgreementTypes</b>.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementTypes(System.Int32)">
            <summary>
            Returns all AgreementTypes in the system.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetAgreementTypesByCustomerType(System.Int32)">
            <summary>
            Retrieves agreement type collection associated with a specified customer type.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetCableAddressChangeDefaults">
            <summary>
            Returns all CableAddressChangeDefaults in the system.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetCareDiscDefault">
            <summary>
            Returns the CaReDiscDefault as configured in the system.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetCaReDiscDefaultDate(System.Int32)">
            <summary>
            Get an existing CaReDiscDefaultDate from the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetCaReDiscDefaultDates(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            Get a collection of existing CaReDiscDefaultDate from the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetContractPeriod(System.Int32)">
            <summary>
            Returns the ContractPeriod associated with the provided id.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetContractPeriods(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            This method is overloaded. Its alias is <b>RequestContractPeriods</b>.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetContractPeriods(System.Int32)">
            <summary>
            Returns all ContractPeriods in the system.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetLookups(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists)">
            <summary>
            Returns the LookupCollection that contains the enumeration values associated with the provided lookupList. <ul> <li>For example, to retrieve all valid ChargePeriods, set lookupList = ChargePeriods</li> </ul>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetOrderConfirmationNumber">
            <summary>
            This method creates and returns a unique OrderConfirmationNumber string. You use this string to create an OrderConfirmation object with IAgreementManagementService.CreateOrderConfirmation().
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetUnitofMeasurement(System.Int32)">
            <summary>
            Returns the UnitOfMeasurement associated with the provided id.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetUnitsofMeasurement(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            Returns all UnitsofMeasurement in the system. This method is overloaded. Its alias is <b>RequestUnitsofMeasurement</b>.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.GetUnitsofMeasurement(System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateAgreementDetailSpearEvent(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearEvent)">
            <summary>
            Updates the provided AgreementDetailSpearEvent in the database. Returns the updated AgreementDetailSpearEvent.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateAgreementDetailSpearRuleGroup(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailSpearRuleGroup)">
            <summary>
            Updates the provided AgreementDetailSpearRuleGroup in the database. Returns the updated AgreementDetailSpearRuleGroup.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateAgreementDetailStatus(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailStatus)">
            <summary>
            Updates the provided AgreementDetailStatus in the database. Returns the updated AgreementDetailStatus.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateAgreementLimitation(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementLimitation)">
            <summary>
            Update agreement limitation object.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateAgreementSequence(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequence)">
            <summary>
            Updates the provided AgreementSequence in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateAgreementSequenceStatus(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStatus)">
            <summary>
            Updates the provided AgreementSequenceStatus in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateAgreementSequenceStep(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceStep)">
            <summary>
            Updates the provided AgreementSequenceStep in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateAgreementSpear(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSpear)">
            <summary>
            Updates the provided AgreementSpear in the database. Returns the updated AgreementSpear.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateAgreementStatus(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementStatus)">
            <summary>
            Updates the provided AgreementStatus in the database. Returns the updated AgreementStatus.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateAgreementType(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementType)">
            <summary>
            Updates the provided AgreementType in the database. Returns the updated AgreementType.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateCableAddressChangeDefaults(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CableAddressChangeDefaults)">
            <summary>
            Updates the provided CableAddressChangeDefaults in the database. Returns the updated CableAddressChangeDefaults.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateCareDiscDefault(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefault)">
            <summary>
            Updates the provided CaReDiscDefault in the database. Returns the updated CaReDiscDefault. There can be only one object per CaReDiscEventType
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateCaReDiscDefaultDate(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscDefaultDate)">
            <summary>
            Update an existing CaReDiscDefaultDate in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateContractPeriod(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ContractPeriod)">
            <summary>
            Updates the provided ContractPeriod in the database. Returns the updated ContractPeriod. Contract Period has Active flag on it. Contract Period can be updated for that flag.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementConfigurationService.UpdateUnitOfMeasurement(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnitOfMeasurement)">
            <summary>
            Updates the provided UnitOfMeasurement in the database. Returns the updated UnitOfMeasurement.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService">
            <summary>
            Provides methods for <b>agreements, agreement sequences</b>, and <b>agreement details</b> (products linked to customers) that
            <ul>
            <li>Create, activate, cancel, and disconnect products.</li>
            <li>Link hardware and software to an agreement.</li>
            <li>Change the status of an agreement per configured event and reason.</li>
            <li>Schedule changes to agreements. </li>
            <li>View agreement sequences. </li>
            <li>Process pre-payment quotes.</li>
            </ul>
            <b><i>Note</i></b><i>: Pre-payment quotes are not the same as "pre-paid" financial accounts. For pre-paids, see the </i><b><i>PayMedia.ApplicationServices.Prepaid.ServiceContracts.</i></b>
            <i>
            </i>
            </summary>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ActivateProduct(System.Int32,System.Int32)">
            <summary>
            Performs ICC system event 5229 (Activate Product) associated with the provided agreementDetailId, and applies the SPEAR associated with Activation and the provided reason. Returns the updated AgreementDetail.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ActivateProducts(System.Int32[],System.Int32)">
            <summary>
            Performs ICC system event 5229 (Activate Product) on the products associated with the provided agreementDetailIds, and applies the SPEAR associated with Activation and the provided reason. Returns the updated AgreementDetailCollection.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.AgreementDetailExists(System.Int32)">
            <summary>
            Returns a boolean value that indicates whether the AgreementDetail associated with the provided agreementDetailId exists in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.AgreementExists(System.Int32)">
            <summary>
            Returns a boolean value that indicates whether the Agreement associated with the provided ID exists in the database.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ApplyAgreementDetailSpear(System.Int32,PayMedia.ApplicationServices.SharedContracts.SpearEvent)">
            <summary>
            Applies a configure SPEAR rule to the specified AgreemenDetail.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ApplyAgreementDetailSpearExcludeDevices(System.Int32,PayMedia.ApplicationServices.SharedContracts.SpearEvent)">
            <summary>
            Apply a SPEAR rule to the specified AgreementDetail. Signals the spearEvent to all associated entities EXCEPT the Devices (DpADs).
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ApplyAgreementSpear(System.Int32,PayMedia.ApplicationServices.SharedContracts.SpearEvent)">
            <summary>
            Changes the status of the provided AgreementDetail according to the user-configured AgreementDetailSpears associated with the provided spearEvent.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CancelAgreementDetails(System.Int32[],System.Int32)">
            <summary>
            Performs ICC system event 142 (Cancel Product) on the provided AgreementDetails. Updates agreement detail status according to configured SPEAR rules. If the scheduleDate is not Now, also calls the Scheduling service.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CheckSpear(System.Int32,PayMedia.ApplicationServices.SharedContracts.SpearEvent)">
            <summary>
            Checks to see whether or not the supplied SpearEvent can be applied to the supplied agreementDetailId. Returns True if the SPEAR can be applied, and False if not. This method does not apply the SPEAR.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ClearWarningMessage(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance,System.Int32)">
            <summary>
            Changes the value of the WarningMessages property of the provided AgreementSequenceInstances to " ".
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ClearWarningMessages(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstanceCollection,System.Int32)">
            <summary>
            This method sets the specified agreement sequence instances' WarningMessages to "".
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CopyAgreementForCableAddressChange(System.Int32,PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CreateAgreement(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement,System.Int32)">
            <summary>
            Creates a new Agreement in the database. Returns the new Agreement.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CreateAgreementDetail(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail,System.Int32[],System.Int32)">
            <summary>
            Use <b>ManageProductCapture(captureParams)</b>.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CreateAgreementDetails(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail[],System.Int32[],System.Int32)">
            <summary>
            Use <b>ManageProductCapture(captureParams)</b>.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CreateAgreementSequenceInstance(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance)">
            <summary>
            Creates a new AgreementSequenceInstance in the database. Returns the new AgreementSequenceInstance.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CreateALaCarteProduct(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct,System.Int32)">
            <summary>
            Creates a new ALaCarteProduct in the database. Returns the new ALaCarteProduct.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CreateDeviceRelationship(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationship)">
            <summary>
            Creates device relationships in an agreement.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CreateDevicesPerAgreementDetail(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailCollection,System.Int32)">
            <summary>
            Creates multiple new DevicePerAgreementDetails in the database. Returns the new DevicePerAgreementDetailCollection.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.CollectionOperationFault" />
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CreateOrderConfirmation(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.OrderConfirmation)">
            <summary>
            Creates an OrderConfirmation object. (See &lt;i&gt;OrderConfirmation&lt;/i&gt; type for a full description and properties.)
            <br>Before you call this method, you must call IAgreementManagementConfigurationService.GetOrderConfirmationNumber(). The GetOrderConfirmationNumber method returns a string that you must pass in the OrderConfirmation.ConfirmationNumber property. </br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CreateSoftwarePerAgreementDetail(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail,System.Int32)">
            <summary>
            Creates a new SoftwarePerAgreementDetail in the database. Returns the new SoftwarePerAgreementDetail.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.DeleteDeviceRelationship(System.Int32)">
            <summary>
            Deletes all device relationships for the given agreement ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.DeleteOrderConfirmation(System.Int32)">
            <summary>
            Deletes the OrderConfirmation object for the given ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.DisconnectAgreementDetails(System.Int32[],System.Int32)">
            <summary>
            Performs ICC system event 133 (Disconnect Product) on the provided AgreementDetails.
            <br>To disconnect products of <u>different customers</u>, call this method iteratively for each array of a given customer's AgreementDetailIds. </br>
            <br>Configured product combination can prevent this method from disconnecting products. If you call this method and it does not disconnect a customer's products, check the required Product Combination configuration.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.EvaluateCaReDiscInformation(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CaReDiscInfoRequest)">
            <summary>
            Fetches information about CaReDisc requirements for a group of products.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ExchangeProductDevices(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ChangeProductDevicesParams)">
            <summary>
            This method is used to exchange devices on DevicePerAgreementDetails belonging to the same customer.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.FindAgreementSequenceInstances(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindAgreementSequenceInstanceCriteria,System.Int32)">
            <summary>
            Returns the collection of AgreementSequenceInstances that match the provided criteria. This should return only one AgreementSequenceInstance per Item, but the collection is used for flexibility.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.FindPotentialSwapProducts(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindPotentialSwapProductCriteria)">
            <summary>
            Used during the product cancellation process to find devices that are eligible to be swapped so that the customer can choose to keep the device belong to the cancelled product.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.FindPrepayQuotes(PayMedia.ApplicationServices.SharedContracts.CriteriaCollection,System.Int32)">
            <summary>
            Returns the collection of PrepayQuotes that match the provided criteria.
            <br>This object applies to "Wait for Payment" agreements--not to voucher products or prepaid quotes for products.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAddressableDevicesByCriteria(PayMedia.ApplicationServices.SharedContracts.CriteriaCollection,System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAddressableDevicesByCustomerId(System.Int32,System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreement(System.Int32)">
            <summary>
            Returns the Agreement associated with the provided agreementId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementBySPADId(System.Int32)">
            <summary>
            Returns the Agreement associated with the provided spadId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementCancelationInfo(System.Int32)">
            <summary>
            This method is a business-level method that aggregates information about an agreement's remaining contract length and the cost of canceling all products of the agreement.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetail(System.Int32)">
            <summary>
            Returns the AgreementDetail associated with the provided agreementDetailId.
            <br>This method does not provide the related software and hardware data for the agreement detail, but it does provide many other details, as well as the commercial product ID associated with the agreement detail. </br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailByLosId(System.Int32)">
            <summary>
            Returns the Agreement associated with the provided agreementId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailHistory(System.Int32,System.Int32)">
            <summary>
            Returns the AgreementDetailHistorys associated with the provided agreementDetailId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailHistoryDetails(System.Int64)">
            <summary>
            Returns the AgreementDetailHistory for the specified history ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailMetadatas(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            Returns the metadata information (if any) for the AgreementDetails specified in the criteria.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetails(System.Int32,System.Int32)">
            <summary>
            Returns the AgreementDetails associated with the provided agreementId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailsByBaseQueryRequest(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            This method uses a BaseQueryRequest as its input parameter to support paging and sorting. Returns a collection of AgreementDetails that match the selection criteria in the BaseQueryRequest.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailsByIds(System.Int32[],System.Int32)">
            <summary>
            Returns the AgreementDetails associated with the provided agreementDetailIds.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailsByStatus(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the AgreementDetails associated with the provided agreementId and agreementDetailStatus.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailsForCustomer(System.Int32,System.Int32)">
            <summary>
            Returns the AgreementDetails associated with the provided customerId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailsForFinancialAccount(System.Int32,System.Int32)">
            <summary>
            Returns the AgreementDetails (products) for the provided financialAccountId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailStatusBasedOnSpear(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail,PayMedia.ApplicationServices.SharedContracts.SpearEvent)">
            <summary>
            Returns the last status based on SPEAR.
            <br>This method is used to retrieve a status ID based on the SPEAR generated for the agreement detail and system event passed in.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailStatusChangeHistoryDetails(System.Int32)">
            <summary>
            This method returns the <u>last</u> status change record for an agreement detail based upon a list of events. The events that are considered are
            <ul>
            <li>107 - Upgrade or Downgrade, Old Product</li>
            <li>108 - Upgrade or Downgrade, New Product</li>
            <li>120 - Order Product for Customer</li>
            <li>5229 - Activate Product</li>
            <li>5245 - Activate/Deactivate Product Suspension ("Sleep")</li>
            <li>142 - Cancel Product</li>
            <li>133 - Disconnect Product</li>
            <li>171 - Reconnnect Product</li>
            <li>123 - Edit Customer Product</li>
            </ul>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailsWithPricing(System.Int32,System.Int32)">
            <summary>
            Returns the AgreementDetailsWithPricings associated with the provided agreementId. This method incorporates GetAgreementDetails with the GetPricing for the collection of AgreementDetails.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailsWithPricingByBaseQueryRequest(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest,System.Boolean)">
            <summary>
            This method uses a BaseQueryRequest to support paging and sorting. Returns the AgreementDetailsWithPricing that match the filter criteria.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailsWithPricingForCustomer(System.Int32,PayMedia.ApplicationServices.SharedContracts.CriteriaCollection,System.Int32)">
            <summary>
            Returns the AgreementDetailsWithPricings associated with the provided customerId. This method replaces GetAgreementDetailsWithPricingByCriteria. The CriteriaCollection replaces the AgreementDetailWithPricingCriteria.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailUpgradeDowngradeHistory(System.Int32,System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementDetailWithPricing(System.Int32)">
            <summary>
            Returns the AgreementDetailWithPricings associated with the provided agreementDetailId. This method incorporates GetAgreementDetail with the GetPricing an AgreementDetail
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementHistory(System.Int32,System.Int32)">
            <summary>
            Returns all history records associated with the provided agreementId.
            <br>Note: Use GetAgreementHistoryDetails if you want a specific history record.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementHistoryDetails(System.Int64)">
            <summary>
            Returns the History record for the specified id. Returns an error if the History record <b>is not</b> an AgreementHistory record (ENTITY_KEY = 23).
            <br>Note: Use GetAgreementHistory if you want all history records for a specific Agreement.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementQuantityInfo(System.Int32)">
            <summary>
            Returns the AgreementHistory associated with the provided ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreements(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            Returns agreements that match the specified filter criteria.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementSequenceInstance(System.Int32)">
            <summary>
            Returns the AgreementSequenceInstance associated with the provided agreementSequenceId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementSequenceInstances(System.Int32,System.Int32)">
            <summary>
            Returns the AgreementSequenceInstances associated with the provided agreementId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementsForCustomerId(System.Int32,System.Int32)">
            <summary>
            Returns the Agreements associated with the provided customerId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementsForFinancialAccount(System.Int32,System.Int32)">
            <summary>
            Returns a collection of Agreements (contract information) for the provided financialAccountId. (A financial account can have zero or more agreements.
            <br>To find products linked to a financial account, use GetAgreementDetailsForFinancialAccount().</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementStatusChangeHistoryDetails(System.Int32)">
            <summary>
            Returns the last status change record for the provided agreement based on Event 962 (Agreement Status Update).
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementsWithSameAddress(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetALaCarteChannel(System.Int32)">
            <summary>
            Returns the ALaCarteChannel associated with the provided alaCarteChannelId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetALaCarteChannelEntitlements(System.Int32)">
            <summary>
            Returns the EntitlementCollectionassociated with the provided aLaCarteChannelld from ALA_CARTE_CHANNEL or ALA_CARTE_CHANNEL_HIST.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetALaCarteChannelFromHistory(System.Int32)">
            <summary>
            Returns the ALaCarteChannel associated with the provided alaCarteChannelId from ALA_CARTE_CHANNEL_HIST.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetALaCarteProductByAgreementDetail(System.Int32)">
            <summary>
            Returns the ALaCarteProduct associated with the provided agreementDetailId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetALaCarteProducts(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the ALaCarteProducts associated with the provided agreementDetailId and commercialProductId. (There can be more than one A La Carte Product per Agreement Detail.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetALaCarteProductsByAgreement(System.Int32,System.Int32)">
            <summary>
            Returns a la carte products for the associated Agreement ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetALaCarteProductsByIds(System.Int32[])">
            <summary>
            Returns the ALaCarteProducts associated with the provided alaCarteIds.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAllAgreementDetailsWithPricingForCustomer(System.Int32,PayMedia.ApplicationServices.SharedContracts.CriteriaCollection,System.Int32)">
            <summary>
            Returns agreement details with pricing for both addressable and non-addressable devices.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAllDeviceEntitlements(System.Int32,System.Boolean)">
            <summary>
            Returns the DeviceEntitlements associated with the provided agreementDetailId or software on other AgreementDetails that are running on hardware of the provided agreementDetailId.
            <br>If the IsActive parameter is True, returns DeviceEntitlements that are linked with the provided agreementDetailId that are associated with other AgreementDetails whose Status.CanWatch is true. </br>
            <br>If the IsActive parameter is False, returns DeviceEntitlements that are linked with the provided agreementDetailId that are associated with other AgreementDetails whose Status.CanWatch is false.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAvailableServiceContractProducts(System.Int32,System.Int32)">
            <summary>
            Returns service contract products that can be sold to the customer with the specified customer ID and device DpAD ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetChannelsForCommercialProducts(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailCollection)">
            <summary>
            Returns a collection of channel-related information for the specified agreement details, using AgreementDetail -> CommercialProduct -> TechnicalProducts[] -> Channels[].
            <br>If the provided agreement detail is an AlaCarte product, the channels returned are the channels that the <b>customer selected</b>.</br>
            <br>If you do not need A La Carte channels and if response time is slow using this method, try GetChannelsForCommercialProductsEx. GetChannelsForCommercialProductsEx returns less properties and, therefore, may respond faster in some environments.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetChannelsForCommercialProductsEx(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailCollection)">
            <summary>
            Returns a collection of channel-related information for the specified commercial product IDs. <i>Does not return A La Carte channels. </i>
            <br>Similar to GetChannelsForCommercialProducts but returns less properties and, therefore, may respond faster in some environments.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetCommercialProductAndServicePricing(System.Int32,System.Int32[],System.Int32[])">
            <summary>
            Returns pricing information for a set of commercial products, given an agreement ID, commercial product IDs, and offer definition IDs.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetCommercialProductLinkedToDpad(System.Int32,System.Int32)">
            <summary>
            Returns the list of commercial product IDs for the specified device DpAD ID and (if a VoIP product) port ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetCurrentDevicesPerAgreementDetailForCustomer(System.Int32,System.Int32)">
            <summary>
            Returns the DevicePerAgreementDetails associated with the provided customer ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDefaultAgreementForCustomer(System.Int32)">
            <summary>
            For the specified customer ID, returns the Agreement object that is flagged as the default agreement.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDeviceEntitlements(System.Int32)">
            <summary>
            Returns the DeviceEntitlements associated with the provided agreementDetailId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDeviceEntitlementsFromSoftwarePerAgreementDetail(System.Int32)">
            <summary>
            Returns the DeviceEntitlements associated with the provided softwarePerAgreementDetailId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicePerAgreementDetail(System.Int32)">
            <summary>
            Returns the hardware device for the provided ID. ID maps to BUSINESSDATA.DEVICE_AGREEMENT_DETAIL.ID
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicePerAgreementDetailHistory(System.Int32,System.Int32)">
            <summary>
            Returns the DevicePerAgreementDetail associated with the specified ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicePerAgreementDetailHistoryByDevice(System.Int32,System.Int32)">
            <summary>
            Used by the Data Aggregator to get the customer number after an Immediate Swop (as the link between customer and device is broken by the swop).
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicePerAgreementDetailWithServiceContractHistoryDetails(System.Int64)">
            <summary>
            Returns the DevicePerAgreementDetailWithWarrantyHistory object for the specified ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicePerAgreementDetailWithServiceContracts(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            Returns a collection of service contract products that match the specified criteria.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDeviceRelationship(System.Int32)">
            <summary>
            Returns the DeviceRelationship for a single device.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDeviceRelationshipHistoryDetails(System.Int64)">
            <summary>
            Returns the device relationship history for the given history record ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDeviceRelationships(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            Returns a DeviceRelationship collection based on the given criteria.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicesPerAgreementDetail(System.Int32,System.Int32)">
            <summary>
            Returns the DevicePerAgreementDetails associated with the provided agreementDetaild.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicesPerAgreementDetail(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            This method is overloaded. Its alias is <b>ReqeustDevicesPerAgreementDetail</b>.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicesPerAgreementDetailByDevice(System.Int32,System.Int32)">
            <summary>
            Returns the DevicePerAgreementDetails associated with the provided deviceId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicesPerAgreementDetailByDeviceAndAgreementDetail(System.Int32,System.Int32,System.Int32)">
            <summary>
            Returns the DevicePerAgreementDetails associated with the provided deviceId and agreeDetId. Currently used to return only the current device per agreement detail record.
            <br>This method returns all Agreement Details associated with a Device. It is possible to have more than one customer (Agreement Detail) associated with a Device. </br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicesPerAgreementDetailByDeviceAndCustomer(System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Returns the DevicePerAgreementDetails associated with the provided deviceId, customerId, and current value. (True means the customer has the device and False means a distributor has the device.)
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicesPerAgreementDetailByIds(System.Int32[])">
            <summary>
            Returns the DevicePerAgreementDetails associated with the provided ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicesPerAgreementDetailByTechnicalProductsAndCustomer(System.Int32[],System.Int32,System.Boolean,System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicesPerAgreementDetailByValidAddress(System.Int32,PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            Returns the DevicePerAgreementDetails associated with the provided validAddressId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicesPerAgreementDetailForAgreement(System.Int32,System.Int32)">
            <summary>
            Returns the DevicePerAgreementDetails associated with the provided agreementId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicesPerAgreementDetailForCustomer(System.Int32,System.Int32)">
            <summary>
            Returns the DevicePerAgreementDetails (including the DeviceId and the AgreementDetailId) for the given customerId.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetEligibleChildDevices(System.Int32,System.Int32[])">
            <summary>
            Given a Parent device and a list of alternate device IDs, returns a collection of device IDs that are compatible as Child devices to the Parent device.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetEligibleParentDevices(System.Int32[])">
            <summary>
            Given a set of device IDs, returns the devices that can be used as the Parent device.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetFutureProductReferencePackage(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FutureCustomerInfo)">
            <summary>
            Returns the FutureManageProductReferencePackage associated with the provided customer information. This method is used to return product capture information based on a future date.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetInvalidCustomerProductsInNewAddress(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ServiceAddressChangeParameters)">
            <summary>
            Returns the AgreementDetailExCollection associated with the provided serviceAddressChangeParam. It returns all the customer existing products that are not available in new service address for a specific agreement
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetLatestRecpadHistoryDate(System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetManageAgreementProductReference(System.Int32)">
            <summary>
            For a given agreement ID, returns the products, prices, and offers that a customer <u>is eligible to have</u>, as well as other data such as technical products, business units,lookups,and globalization settings. This method supports the population of reference items in the Manage Products Screen.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetManageFullProductDetail(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams)">
            <summary>
            For a given agreement ID, returns the products, pricing, and offers <u>that a customer currently has</u>. Other returned data includes technical products (hardware and software) and channels.
            <br>Note: This method supports the population of product details for the Manage Products form. This method is used to allow the CSR to play a "what if" game by adding or removing offers and agreement details and then viewing the pricing and channel impacts of the proposed changes.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetOrderConfirmation(System.Int32)">
            <summary>
            Returns the OrderConfirmation object for the specified order confirmation ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetOrderConfirmationHistory(System.Int32,System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetOrderConfirmationHistoryDetails(System.Int64)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetOrderConfirmationsForAgreement(System.Int32,System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetOrderConfirmationsForCustomer(System.Int32,System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetPrepayQuotesForCustomer(System.Int32)">
            <summary>
            Returns the PrepayQuotes associated with the provided customerId.
            <br>This object applies to "Wait for Payment" agreements--not to voucher products or prepaid quotes for products.</br>
            <br>Notes</br>
            <br>The PrepayQuote.RequiredRemainingPaymentAmount tells you how much the customer must pay.</br>
            <br>When the RequiredRemainingPaymentAmount = 0, the PrepayQuote.Status changes to "Fulfilled." </br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetPricingForProduct(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail)">
            <summary>
            Returns the PrepayQuotes associated with the provided customerId. This method returns pricing information for a given agreement detail object. The data returned is a subset of the data returned by GetManageProductOverview().
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetProjectedDisconnections(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionCriteria)">
            <summary>
            Returns the date and time on which Quote-based product(s) are projected to be disconnected, taking all extensions and grace periods into consideration.
            <br>Note:The projected disconnection date is a calculated value. Because of configured extensions and grace periods, it may be later than the value stored in the ICC database.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetBatchProjectedDisconnections(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProjectedDisconnectionParams)">
            <summary>
            Returns the date and time on which Quote-based product(s) are projected to be disconnected, taking all extensions and grace periods into consideration.
            <br>Note:The projected disconnection date is a calculated value. Because of configured extensions and grace periods, it may be later than the value stored in the ICC database.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSelectModelEntitiesBySanboxId(System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSoftwareForAgreementDetailByAD_IdAndTechProdId(System.Int32,System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSoftwareForAgreementDetailById(System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.CollectionOperationFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSoftwarePerAgreementDetails(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            Returns the SoftwarePerAgreementDetails associated with the specified criteria.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSoftwareForAgreementDetailByIds(System.Int32[])">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.CollectionOperationFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSoftwareForAgreementDetails(System.Int32[],System.Int32)">
            <summary>
            Returns the SoftwarePerAgreementDetails associated with the provided agreementDetailIds.
            <br>To return the SoftwarePerAgreementDetails for a single AgreementDetailId, use GetSoftwarePerAgreementDetailForAgreementDetail(). </br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.CollectionOperationFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSoftwareForAgreementDetailsByDpADId(System.Int32,System.Int32)">
            <summary>
            Returns the software products linked to a specified DpAD ID (device per agreement detail ID).
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.CollectionOperationFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSoftwarePerAgreementDetailByLoSId(System.Int32)">
            <summary>
            Returns the software products linked to a specified LoSId ("line of service ID"). Used with Telephony (VoIP) products.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSoftwarePerAgreementDetailForAgreementDetail(System.Int32,System.Int32)">
            <summary>
            Returns the SoftwarePerAgreementDetails associated with the provided agreementDetailId.
            <br>To return the SoftwarePerAgreementDetails for multiple AgreementDetailIds, use GetSoftwareForAgreementDetails().</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.CollectionOperationFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSoftwarePerAgreementDetailHistory(System.Int32,System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSoftwarePerAgreementDetailHistoryDetails(System.Int64)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetTopUpProductsInformation(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindTopUpItemsCriteria)">
            <summary>
            Used to obtain information about voucher products to be topped off (that is, receive funds).
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetUnlinkedSoftwareProductsForAgreementDetails(System.Int32[])">
            <summary>
            Assesses the specified list of agreement details and returns a collection of the ones that contain unlinked software technical products.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetVoucherFundsTransferInformation(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindVoucherFundsTransfersCriteria)">
            <summary>
            Used to obtain information about voucher products that can receive funds from a financial account.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.IsAgreementStatusExcludedFromServiceAddressChangeFlow(System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.IsCableAddressChangeAlreadyScheduled(System.Int32,System.Int32)">
            <summary>
            Returns the UnlinkedSoftwareProducts associated with the provided agreementDetailIds. This method returns true if a given InvoiceLine is valid for receiving payments.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.IsVoipProduct(System.Int32)">
            <summary>
            If this method returns True, the product associated with the specified DpAD is a VoIP product.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ManageProductCapture(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductCaptureParams)">
            <summary>
            Used primarily to add new products and offers to a customer's agreement. In the UI, the CSR Module &gt; Manage Product form calls this method to create offers and agreement details.
            <br>Notes:</br>
            <ul>
            <li>ManageProductCapture is the preferred method for creating a user interface that allows price quoting, as it takes the same data object as IAgreementManagementService.GetManageFullProductDetail. </li>
            <li>ManageProductCapture can perform a product reconnect, cancel, upgrade, or downgrade.</li>
            <li>Automatically generates DevicePerAgreementDetails to link any hardware for the product to a physical device or software. </li>
            <li>Generates SoftwarePerAgreementDetails, ALaCarteProducts (if required), and an AgreementSequenceInstance object that is responsible for handling the status changes of any products, shipping orders, or work orders that were created in the process. </li>
            <li>Creates shipping and work orders, if either are required. </li>
            <li>Must always be used with a sandbox.</li>
            <li>When you use theAPI to create a new AgreementDetail, ICC ignores the user-configured Default Disconnection Setting value and automatically sets the AgreementDetail.DisconnectionSetting to AccountBased.
            <br>To force ICC to use the user-configured Default Disconnection Setting, you must set the AgreementDetail.DisconnectionSetting to UseDefaultProductDisconnectionSettingOnCreate.</br>
            <br>If you do not use this setting, or if the commercial product does not have a configured Default Disconnection Setting, ICC sets the AgreementDetail.DisconnectionSetting to AccountBased.</br></li>
            </ul>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ManageSoftwareForAgreementDetailWithRequest(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ManageSoftwareForAgreementDetailRequest)">
            <summary>
            This method attempts to link software belonging to the specified agreement detail to the specified DpAD. It returns the DpAD, possibly with new SpADs.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ProcessAgreementDetailSpear(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProcessAgreementDetailSpearParams)">
            <summary>
            Use this method to check if agreement details violates configured SPEAR rules. The method also enables you to perform (or schedule) the specified ICC event. The returned object contains failure messages.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ProcessPrepayQuote(System.Int32,System.Decimal)">
            <summary>
            Processes a received payment for a prepayment quote (also known as a Wait for Payment quote). Also, only the latest quote (according to its creation date) in a financial account is fulfilled. <br><b>Note:</b>The PrepayInvoiceLine property is actually the financial account ID.</br>
            <br>This method applies to "Wait for Payment" agreements--not to voucher products or prepaid quotes for products.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ProcessProductSuspensions(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SuspendProductParams)">
            <summary>
            Performs a product suspension. Replaces the method SleepAgreementDetails.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ReauthorizeDevices(System.Int32[],System.Int32)">
            <summary>
            Writes an event 190 history record for each of the provided DevicePerAgreementDetails (DpADs). This triggers the Provisioning Windows service to send out new authorization to the device.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ReauthorizeProducts(System.Int32[],System.Int32)">
            <summary>
            Writes an event 190 history record for each DpAD that is related to the products, which triggers the Provisioning Windows service to send out a new authorization for the product. A DpAD is considered "related" if it is a child of the agreement detail, or if it is running software (SpAD) that is a child of the agreement detail.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ReconnectAgreementDetails(System.Int32[],System.Int32)">
            <summary>
            Changes the status of the provided AgreementDetails to Reconnect. Calls the scheduling service if the scheduleDate is not Now.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ReevaluateProductsPricing(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ProductReevaluationCriteria)">
            <summary>
            Generates reversals for products that need to be rebilled.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleCancelAgreementDetails(System.Int32[],System.DateTime,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Schedules a future date to change the status of the provided AgreementDetails to Cancel. Schedule update of Agreement Detail Status to Cancel. Call the scheduling service if the scheduleDate is not Now.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleCreateAgreement(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement,System.DateTime,System.Int32)">
            <summary>
            Schedules ICC to perform system event 960 (Create Agreement) on the given effective date and for the specified reason.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleDisconnectAgreementDetails(System.Int32[],System.DateTime,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Schedules ICC to perform system event 133 (Disconnect Product) on the given effective date and for the specified reason. To edit an existing Disconnection schedule record, set IsScheduleEdit to True and pass in the schedule record ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleProductActivation(System.Int32,System.DateTime,System.Int32)">
            <summary>
            Schedules a date to activate a single AgreementDetail (event 5229).
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleProductActivations(System.Int32[],System.DateTime,System.Int32)">
            <summary>
            Schedules ICC to perform event 5229 (Activate Product) for the specified agreement detail IDs (products) on the specified date. Uses configured SPEAR rules for event 5229 to determine what new status to assign to the products.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleReconnectAgreementDetails(System.Int32[],System.DateTime,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Schedules ICC to perform system event 171 (Reconnect a Disconnected Product) on the given effective date and for the specified reason. To edit an existing Reconnection schedule record, set IsScheduleEdit to True and pass in the schedule record ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleSwapDevice(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters)">
            <summary>
            Schedules a date for a device swap.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleUpdateAgreement(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement,System.DateTime,System.Int32)">
            <summary>
            Schedules ICC to perform system event 961 (Edit Agreement) on the given effective date and for the specified reason.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleUpdateAgreementDetail(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail,System.DateTime,PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailUpdateReasons)">
            <summary>
            Schedules ICC to update the provided AgreementDetail on a future date.
            <br>If a sandbox ID is provided for the AgreementDetail, ICC creates a schedule record to update this AgreementDetail in the sandbox and attempts to auto-link product to devices and created SPADs.</br>
            <br>This singular update is used only for the Edit Agreement Detail Screen.</br>
            <br>To update the AgreementDetail immediately, use the UpdateAgreementDetail method.</br>
            <br>The AgreementDetailUpdateReasons parameter accepts reason IDs for event 123 (Edit Customer Product), 5251 (Update Product Quantity), 222 (Increment EPS), and 223 (Edit Product's Billing Attributes).</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleUpdateAgreementDetailWithRequest(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequest)">
            <summary>
            Schedules ICC to update the provided AgreementDetail on a future date.
            <br>If a sandbox ID is provided for the AgreementDetail, ICC creates a schedule record to update this AgreementDetail in the Sandbox and attempts to auto-link the product to devices and created SpADs.</br>
            <br>This singular update is used only for the Edit Agreement Detail Screen.</br>
            <br>To update the AgreementDetail immediately, use the UpdateAgreementDetail method.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleUpdateAgreementDetails(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleUpdateAgreementDetailRequests)">
            <summary>
            Schedules ICC to update the provided AgreementDetails on a future date.
            <br>If a sandbox ID is provided for the AgreementDetail, ICC creates a schedule record to update this AgreementDetail in the sandbox and attempts to auto-link product to devices and created SpADs.</br>
            <br>To update the AgreementDetail immediately, use the UpdateAgreementDetail method for each AgreementDetail.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleUpdateAgreementDetailsStatus(System.Int32[],System.DateTime,System.Int32)">
            <summary>
            For the given list of AgreementDetails (products), schedules ICC to perform event 5228 (Update Product Status) on the given date and for the given reason ID. The status of the new AgreementDetails depends on SPEAR rules configured for event 5228.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleUpdateAgreementDetailStatus(System.Int32,System.DateTime,System.Int32)">
            <summary>
            Schedules ICC to perform event 5228 (Update Product Status) on the given date and for the given reason ID. The new AgreementDetail's status depends on SPEAR rules configured for event 5228.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleUpdateAgreementsStatus(System.Int32[],System.DateTime,System.Int32)">
            <summary>
            For the given list of Agreements, schedules ICC to perform system event 962 (Update Agreement Status) on the given effective date and for the specified reason. The new status of the Agreements depends on configured SPEAR rules.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleUpdateAgreementStatus(System.Int32,System.DateTime,System.Int32)">
            <summary>
            Schedules ICC to perform system event 962 (Update Agreement Status) on the given effective date and for the specified reason. The Agreement's new status depends on configured SPEAR rules.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleUpdateALaCarteProduct(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct,System.DateTime,System.Int32)">
            <summary>
            Schedules ICC to perform system event 5250 (Change Channels in a la Carte Product) on the given effective date and for the specified reason.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleUpgradeDowngradeAgreementDetail(System.DateTime,System.Boolean,System.Int32,PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail,System.Int32,System.Int32,System.Boolean,System.Int32)">
            <summary>
            Schedules an upgrade or downgrade on the provided AgreementDetail. Returns the updated AgreementDetail.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.SetAgreementDetailMetadatas(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SetAgreementDetailMetadataRequest)">
            <summary>
            Creates or updates metadata information for an agreement detail.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.SleepAgreementDetails(System.Int32[],System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Suspends the provided AgreementDetails for the duration of the provided date range. Returns the updated AgreementDetails.
            <br>This action is also known as "to sleep a product."</br>
            <br>You must call the scheduling service if the startDate of the suspension is not Now.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.SoftwarePerADExists(System.Int32)">
            <summary>
            Returns True if the specified SpAD ID exists.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.SwapDevice(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters)">
            <summary>
            This method is used to change the device on an AgreementDetail (product).
            <br>Performs the same function as ICC system events 146 and 155 ("Swop Old Device Immediately per Swop Rules" and "Swop New Device Immediately per Swop Rules").</br>
            <br>If swapDeviceParameters.EffectiveDate is greater then today's date, this method calls ScheduleSwapDevice(). </br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.SwapDeviceBySpear(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceBySpearParameters)">
            <summary>
            This method is used to change the device on an DpAD based on configured SPEAR rules.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.SwopOrRemoveDeviceForDeviceRelationship(System.Int32,System.Int32,System.Int32)">
            <summary>
            Maintain a DeviceRelationship when a device is swopped. NewDeviceId=0 means the device is being removed from the customer. If the returned value is False, no device was swopped or removed.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.TopUpProducts(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TopUpParams)">
            <summary>
            Used to add funds to ("top up") voucher products. This actions extends the products' charged-until date and writes a 105 event for the products.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.TransferFundsToVoucherProducts(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.VoucherFundsTransferParams)">
            <summary>
            Used to transfer funds from a financial account to one or more voucher products.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateAgreement(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.Agreement,System.Int32)">
            <summary>
            Updates the provided Agreement in the database. Returns the updated Agreement.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateAgreementDetail(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail,PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailUpdateReasons)">
            <summary>
            Updates the provided AgreementDetail in the database. Returns the updated AgreementDetail.
            <br>To use this method via the API, pass in a fully populated AgreementDetail object. The reason is that this method was built for use by the PSM, and the PSM always passes in the full contract. The process would be this: Fetch the AgreementDetail first, make changes, and then submit the fully populated object in the Update.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateAgreementDetails(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail[],PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailUpdateReasons)">
            <summary>
            Updates the provided AgreementDetails in the database. Returns the updated AgreementDetails.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateAgreementDetailsStatus(System.Int32[],System.Int32)">
            <summary>
            For the given list of AgreementDetails (products), performs event 5228 (Update Product Status). The new status of the AgreementDetails depends on SPEAR rules configured for event 5228 and the given reason ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateAgreementDetailStatus(System.Int32,System.Int32)">
            <summary>
            Performs event 5228 (Update Product Status). The AgreementDetail's new status depends on SPEAR rules configured for event 5228 and the given reason ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateAgreementQuantityInfo(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementQuantityInfo,System.Int32,System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateAgreementSequenceInstance(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementSequenceInstance)">
            <summary>
            Updates the provided AgreementSequenceInstance in the database. Returns the updated AgreementSequenceInstance.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateAgreementsStatus(System.Int32[],System.Int32)">
            <summary>
            For the given list of Agreements, performs event 962 (Update Agreement Status). The new status of the Agreements depends on SPEAR rules configured for event 962 and the given reason ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateAgreementStatus(System.Int32,System.Int32)">
            <summary>
            Performs event 962 (Update Agreement Status). The Agreement's new status depends on SPEAR rules configured for event 962 and the given reason ID.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateALaCarteProduct(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ALaCarteProduct,System.Int32)">
            <summary>
            Updates the provided ALaCarteProduct in the database. Returns the updated ALaCarteProduct.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateCurrentToCustomer(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailCollection,System.Int32)">
            <summary>
            When two DevicePerAgreementDetails associated with the same device are provided--one for a customer and one for a distributor--updates the Current property for the customer to True and the Current property for the distributor to False. This indicates that the device is in the custody of the customer. Returns the updated DevicePerAgreementDetails.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateCurrentToDistributor(System.Int32[],System.Int32)">
            <summary>
            When two DevicePerAgreementDetails associated with the same device are provided--one for a customer and one for a distributor--this method updates the Current property for the customer to False and the Current property for the distributor to True. This indicates that the device is in the custody of the distributor. Returns the updated DevicePerAgreementDetails.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateDevicePerAgreementDetail(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetail,System.Int32)">
            <summary>
            Updates the provided DevicePerAgreementDetail in the database. Returns the updated DevicePerAgreementDetail.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateDeviceRelationship(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DeviceRelationship)">
            <summary>
            Updates device relationships in an agreement.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateDevicesPerAgreementDetail(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DevicePerAgreementDetailCollection,System.Int32)">
            <summary>
            Updates the provided DevicePerAgreementDetails in the database. Returns the updated DevicePerAgreementDetails. Commonly used to add serial numbers to a customer's device:
            <ul>
            <li>First, use GetDevicesPerAgreementDetail (agreementDetailId) to get the technical product ID on the DpAD. </li>
            <li>Then, use UpdateDevicesPerAgreementDetail to update the technical product with its serial number.</li>
            </ul>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateDpadsWithDeviceInfo(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.DpadWithDeviceInfoCollection,System.Int32,System.Int32)">
            <summary>
            When a shipping order is not needed, this method adds a device to the product, and then updates the DpAD. Otherwise, the method only updates the DpAD.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateLinkDpadAndServiceContracts(System.Int32[],System.Int32)">
            <summary>
            Updates the association between device DpADs (Device per AgreementDetail) and service contract products.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateManualDisconnectDate(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest)">
            <summary>
            Updates the disconnect date for QuoteBased Products.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateSoftwarePerAgreementDetail(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SoftwarePerAgreementDetail,System.Int32)">
            <summary>
            Updates the provided SoftwarePerAgreementDetail in the database. Returns the updated SoftwarePerAgreementDetail.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpgradeDowngradeAgreementDetail(System.Boolean,System.Int32,PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetail,System.Int32,System.Int32)">
            <summary>
            Performs either an upgrade or downgrade on the provided AgreementDetail. Returns the updated AgreementDetail.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ValidateParentChildDevices(System.Int32,System.Int32[])">
            <summary>
            Validates whether the non-addressable devices paired with the specified addressable devices match the configured parent-child network relationship.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.WithdrawVoucherFunds(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.WithdrawFundsParams)">
            <summary>
            This method is used to withdraw funds that have been assigned to voucher or quote based products.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.FindDependentProducts(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FindDependentProductsRequest)">
            <summary>
            Takes a list of products that you want to disconnect or cancel and a list of all active products. Returns the list of additional products that you must also cancel to satisfy product combination rules.
            <br>Example: </br>
            <br>Customer has product X and Y, and Y is dependent on X.</br>
            <br>If you call this method with (X) in list to cancel, and (X, Y) in list of active products, the method returns Y.</br>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CancelPrepayQuotes(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CancelPrepayQuoteRequest)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.FulfilPrepayQuotes(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.FulfilPrepayQuoteRequest)">
            <summary>
            Used to fulfil prepayment quotes (also known as Wait for Payment quotes).
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicePerAgreementDetailWithWarrantyProduct(System.Int32)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.UpdateManualDisconnectDates(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UpdateManualDisconnectDateRequest)">
            <summary>
            Updates the disconnect date for QuoteBased Products, and returns a response object.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.BrokenRuleFault" />
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.SwapDevices(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceParameters[])">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.SwapDevicesBySpear(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.SwapDeviceBySpearParameters[])">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetSelectableOfferDefinitions(System.Int32,System.Int32,System.Int32[],System.DateTime,System.Boolean,PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.AgreementDetailCollection)">
            <summary>
            Uses Customer, Agreement, and the customer's current OfferDefinition objects to return available offer definitions for the customer.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ScheduleSoftwareLinking(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ScheduleLinkingRequest)">
            <summary>
            Schedules the linking and unlinking of software products (SpADs) and devices (DpADs). Requires a Sandbox.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetAgreementByUserName(System.String)">
            <summary>
            Returns agreement based on UserName. User name is not case sensitive. If no matching agreement is found null is returned.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.CreateCEDevice(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.CreateCEDeviceRequest)">
            <summary>
            Creates Consume equipment devices.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetProductIdsNotRestrictedForUser(System.Int32,System.String,System.Int32[])">
            <summary>
            This will accept customer Id, UseCase, and product Ids. it will check if current Usecase is restricted and return product ids that are not restricted for current action.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetUnlinkedProducts(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.UnlinkedProductsRequest)">
            <summary>
            Assesses the specified list of agreement details and sandbox Id and returns a collection of the ones that contain unlinked software and hardware technical products.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDevicePerAgreementDetailWithWarrantyProductCollection(PayMedia.ApplicationServices.SharedContracts.BaseQueryRequest)">
            <summary>
            find device per agreement detail with warranty product collection by criteria
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.TransferHardwareProductsToNewAgreement(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.TransferHardwareProductsRequest)">
            <summary>
            Transfers one or more hardware agreement details to a new agreement.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.ReconnectAgreementDetailsWithGracePeriodExtension(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.ReconnectAgreementDetailParams)">
            <summary>
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="M:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.IAgreementManagementService.GetDaysRemainingOnQuoteBaseProducts(PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.DataContracts.GetDaysRemainingOnQuoteBaseProductsRequest)">
            <summary>
            Class with and array of Agreement Management IDs to return the number of remaining days.
            </summary>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.IBSFault">Thrown when a logic flow exception is encountered. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.SystemFault">Thrown when a system fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.AuthenticationFault">Thrown when an authentication fault occurs. Please check the exception message for more details.</exception>
            <exception cref="T:PayMedia.ApplicationServices.SharedContracts.PermissionFault">Thrown when a user does not have the necessary permission to execute this method.</exception>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists">
            <summary>
            LookupLists retrieve values that have been configured for your implementation of ICC. <i>Note</i>: When an enumerator has an initial int value, the value reflects an <u>ICC event number</u>, and GetLookups () returns the list of configured Reasons for that event.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementChangeReasons">
            <summary>
            Reasons configured for Edit Agreement (event 961)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.CaReDiscDefaultDate">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ReasonExtendDisconnectDate">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.WriteGenericBillableEventViaCriticalActionReasons">
            <summary>
            Reasons configured for WriteGenericBillableEventViaCriticalAction (event 230)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementContractRenewalsUpdateReasons">
            <summary>
            Reasons configured for Automatically Renew Agreement (event 126)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementCreationEditReasons">
            <summary>
            Reasons configured for Create Agreement (event 960)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementDetailCancelReasons">
            <summary>
            Reasons configured for Cancel Product (event 142)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementDetailChangeReasons">
            <summary>
            Reasons configured for Edit Customer Product (event 123)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementDetailCreationReasons">
            <summary>
            Reasons configured for Order Product for Customer (event 120)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementDetailDisconnectReasons">
            <summary>
            Reasons configured for Disconnect Product (event 133)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementDetailReconnectReasons">
            <summary>
            Reasons configured for Reconnect Product (event 171)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementDetailSleepReasons">
            <summary>
            Reasons configured for Activate/Deactivate Product Suspension (event 5245)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementDetailEndSleepReasons">
            <summary>
            Reasons configured for Automatic End Product Suspension (event 5252)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementDetailStatusChangeReasons">
            <summary>
            Reasons configured for Edit Product Status (event 5228)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementDetailStatuses">
            <summary>
            Configured agreement detail (product) statuses
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementSequenceStatuses">
            <summary>
            Configured statuses for steps in a configured Agreement Sequence
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementStatusChangeReasons">
            <summary>
            Reasons configured for Update Agreement Status (event 962)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementStatuses">
            <summary>
            Configured statuses for agreements (contracts)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AgreementTypes">
            <summary>
            Configured agreement types. An <i>agreement type</i> is a configured set of rules that you use to manage a particular type of contract.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AlaCarteProductCreationReasons">
            <summary>
            Reasons configured for Select a la Carte Product (event 5249)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.AlaCarteProductUpdateReasons">
            <summary>
            Reasons configured for Update a la Carte Product (event 5250)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ChangeCustomersServiceAddress">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ChargePeriods">
            <summary>
            Period for which the invoice run should generate the recurring charge for a customer's product. Valid values are <i>None (0), Monthly (1)</i>, <i>Quarterly (3)</i>, <i>HalfYearly (6)</i>, and <i>Yearly (12)</i> and <i>Short Term Subscription </i>.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ContractPeriods">
            <summary>
            Configured contract periods. A <i>contract period </i>is the duration of a contract (agreement).
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.DisconnectionDateSettings">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.DevicePerAgreementDetailCreateReasons">
            <summary>
            Reasons configured for Create Device Record for Product (event 5241)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.DevicePerAgreementDetailUpdateReasons">
            <summary>
            Reasons configured for Update Device for Product (event 5242)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ImmediateSwapOldReasons">
            <summary>
            Reasons configured for Swop Old Device Immediately (vent 146)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ImmediateSwapReasons">
            <summary>
            Reasons configured for Swop New Device Immediately (event 155)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.LinkDeviceToUnusedProduct">
            <summary>
            Reasons configured for Link Device to Unused Product (event 148)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ProductActivation">
            <summary>
            Reasons configured for Activate Product (event 5229)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ProductReplaceReasons">
            <summary>
            Reasons configured for Upgrade or Downgrade, New Product (event 108)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ProductRetireReasons">
            <summary>
            Reasons configured for Upgrade or Downgrade, Old Product (event 107)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ReauthorizeReasons">
            <summary>
            Reasons configured for Re-authorise Software on Device(event 190)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.RemoveAgreementSequenceInstanceWarningReasons">
            <summary>
            Reasons configured for Remove Agreement Sequence Warning (event 5246)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.SetCurrentToCustomerReasons">
            <summary>
            Reasons configured for Link Pre-installed Device to Customer(event 5244)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.SetCurrentToDistributorReasons">
            <summary>
            Reasons configured for Link Pre-installed Device to Distributor(event 5243)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.SoftwarePerDpADCreateReasons">
            <summary>
            Reasons configured for event 5239
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.SoftwarePerDpADUpdateReasons">
            <summary>
            Reasons configured for Update Software per Product (event 5240)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.SwapBySpearNewReasons">
            <summary>
            Reasons configured for Swop New Device per SPEAR (event 173)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.SwapBySpearOldReasons">
            <summary>
            Reasons configured for Swop Old Device per SPEAR (event 172)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.SwapLinkedDeviceDuringProductCancelReasons">
            <summary>
            Reasons configured for Switch Multi-room Products' Devices during Cancel (event 112)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.TopUpProductForPrepaidReasons">
            <summary>
            Reasons configured for Top-up Product for Pre-paid (event 105)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.TransferFundsForVoucherProductsReasons">
            <summary>
            Reasons configured for Transfer Funds for Voucher Products (event 204)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.UnitsOfMeasurement">
            <summary>
            Configured measurement units. A <i>measurement unit</i> is the smallest physical division for which a commercial product can be captured. You use measurement units when you configure agreement types to use for MDU operators and businesses such as pubs that provide your content or services to a public audience. When you capture these types of agreements, you select a measurement unit, and then specify the number of units. Customer Central can calculate charges by multiplying its list price by the number of units or by looking up a range-based price.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.UpdateAgreementDetailQuantityReason">
            <summary>
            Reasons configured for Update Product Quantity (event 5251)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ProductBillableFieldChangeReasons">
            <summary>
            Reasons configured for Edit Product's Billing Attributes (event 223)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ReverseFTforBillingChangeReasons">
            <summary>
            Reasons configured for Reverse FTs Affected by New Billing Conditions (event 106)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ProductUnlinkedFromDeviceReasons">
            <summary>
            Reasons configured for Unlink Product from Device (event 110)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.ProductLinkedToDeviceReasons">
            <summary>
            Reasons configured for Link Product to Device (event 111)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.RedistributeAccountFundsReasons">
            <summary>
            Reasons configured for Redistribute Account Funds (event 104)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.QuoteForProductQuantityChangeReasons">
            <summary>
            Create Quote to Change Quote Product's Quantity (event 2109)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.PrepayQuoteStatuses">
            <summary>
            List or Prepayment Quote Statuses
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.QuoteForAgreementDetailBillableEditReasons">
            <summary>
            reate Quote to Change Quote Product's Charge Period (event 2223)
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.LookupLists.CalanderEventGraceDayExtentionReasons">
            <summary>
            Extend Products Grace Days due to a calandar event 205
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ManageSoftwareOperations">
            <summary>
            Enumeration of operations for the ManageSoftwareForAgreementDetailWithRequest to perform.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ManageSoftwareOperations.PerformLinking">
            <summary>
            Attempt to link or unlink an agreement detail. Requires an AgreementDetailId and a DpAD ID. If a DpAD Id is not provided the AutomaticLinking list will be used.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ManageSoftwareOperations.FetchOnly">
            <summary>
            The method will perform no linking, but will instead fetch the DpADs for the provided customer or the provided product.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ManageSoftwareOperations.CreateSchedule">
            <summary>
            The method will perform no Linking. It will close the current sandbox and schedule the software linking for a later date. Requires a sandboxId and an ExecutionDate.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ManageSoftwareOperations.LoadSchedule">
            <summary>
            The method will simulate an existing schedule, perofrming its link and unlink operations on the current sandbox.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.OverrideTypes">
            <summary>
            Enumerates the ways that a price override can be calculated:
            <ul>
            <li>Percent off</li>
            <li>Amount off</li>
            <li>Fixed price</li>
            </ul>
            See enumerators for details.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.OverrideTypes.PercentOff">
            <summary>
            A percentage of the list price. For example, if you pass in a value of 5 and the ledger account is a <i>credit</i> ledger account, ICC takes 5% off the list price.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.OverrideTypes.AmountOff">
            <summary>
            A fixed amount. For example, if you pass in a value of 5 and the ledger account is a <i>debit</i>ledger account, ICC adds 5 to the list price.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.OverrideTypes.FixedPrice">
            <summary>
            A fixed price. For example, if you pass in 5 and the ledger account is a <i>credit</i> ledger account, the price is -5.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.PrepayQuoteStatus">
            <summary>
            The status of a prepay quote. <ul> <li><b>This enumeration applies to "Wait for Payment" agreements--not to voucher products or prepaid quotes for products.</b></li> </ul>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.PrepayQuoteStatus.Fulfilled">
            <summary>
            Closed status.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.PrepayQuoteStatus.Canceled">
            <summary>
            Canceled status.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.PrepayQuoteStatus.Open">
            <summary>
            Open status.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ProcessAgreementDetailSpearAction">
            <summary>
            Enumeration of actions for the AgreementDetailSpearProcess to perform.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ProcessAgreementDetailSpearAction.Execute">
            <summary>
            Attempt to execute the SPEAR for all provided products.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ProcessAgreementDetailSpearAction.Check">
            <summary>
            Check the provided products to see if they are valid for SPEAR. No data is changed in the system.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.ProcessAgreementDetailSpearAction.CheckExecute">
            <summary>
            Perform the SPEAR event on only the products that pass the check SPEAR test.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.RECpADAdjustmentTypes">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.RECpADAdjustmentTypes.PriceAdjustment">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.RECpADAdjustmentTypes.Override">
            <summary>
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.RECpADType">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.RECpADType.ModifyBilling">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.RECpADType.StopBilling">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.RECpADType.Invalid">
            <summary>
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.SuppressDisconnectionExtensionSettings">
            <summary>
            This defines the reason why a product can not receive extension to its prepaid manual disconnection date.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.SuppressDisconnectionExtensionSettings.None">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.SuppressDisconnectionExtensionSettings.QuantityUpdate">
            <summary>
            The product has changed quantity and is awaiting payment for the new quoted price.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.SuppressDisconnectionExtensionSettings.FundWithdrawal">
            <summary>
            The product has had money withdrawn from it.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.SuppressDisconnectionExtensionSettings.PendingUpgrade">
            <summary>
            The product has gone through a product upgrade or downgrade and still is awaiting payment.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.SuppressDisconnectionExtensionSettings.FundsNotAppliedToActiveProduct">
            <summary>
            A QuoteBillingSeries rule was matched that removed grace days from any active product that was excluded from the rule.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.SuppressDisconnectionExtensionSettings.UserSpecified">
            <summary>
            The product has gone through a product upgrade or downgrade and still is awaiting payment.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.TechnicalProductTypes">
            <summary>
            Enumerates the types of technical products.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.TechnicalProductTypes.Hardware">
            <summary>
            Indicates a hardware product; for example, a smartcard.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.TechnicalProductTypes.Software">
            <summary>
            Indicates a software product; for example, a bouquet of channels.
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.TransferedProductTypes">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.TransferedProductTypes.Requested">
            <summary>
            Product was requested to be transfered by the user.
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.TransferedProductTypes.Paried">
            <summary>
            Product was not specified for transfer, but contains a device that was paired with a requested for transfer device
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.UsageTypes">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.UsageTypes.Includes">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.UsageTypes.RunsOn">
            <summary>
            </summary>
        </member>
        <member name="T:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.WriteHistoryTypes">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.WriteHistoryTypes.Always">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.WriteHistoryTypes.DateChange">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.WriteHistoryTypes.PeriodChange">
            <summary>
            </summary>
        </member>
        <member name="F:PayMedia.ApplicationServices.AgreementManagement.ServiceContracts.WriteHistoryTypes.Never">
            <summary>
            </summary>
        </member>
    </members>
</doc>
